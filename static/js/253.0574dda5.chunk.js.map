{"version":3,"file":"static/js/253.0574dda5.chunk.js","mappings":"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","sources":["pages/Settings/Settings.jsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Button, Stack, Snackbar, Alert } from \"@mui/material\";\n\nimport { useNavigate, Navigate } from \"react-router-dom\";\n\nimport GlobalState from \"../../contexts/GlobalStates\";\nimport { url } from \"../../ENV\";\n\nconst Settings = () => {\n  const navigate = useNavigate();\n  const { isSignedIn, setIsSignedIn, userTheme, setUserTheme } =\n    useContext(GlobalState);\n\n  const [expanded, setExpanded] = useState(false);\n\n  const handleLogoutClick = () => {\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"username\");\n    setIsSignedIn(false);\n    navigate(\"/\");\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [isPublic, setIsPublic] = useState(\n    localStorage.getItem(\"public\") === \"public\"\n  );\n  console.log(isPublic);\n  console.log(isPublic ? \"Public\" : \"Private\");\n  console.log(isPublic);\n  const [openPublic, setOpenPublic] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"public\",isPublic);\n  // },[isPublic])\n\n  const handlePublicClick = () => {\n    const publicObj = {\n      email: localStorage.getItem(\"email\"),\n      public: localStorage.getItem(\"public\") === \"public\",\n    };\n    async function onPublic() {\n      setOpenPublic(true);\n      await fetch(`${url}/updatePublic`, {\n        method: \"POST\",\n        body: JSON.stringify(publicObj),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      // setIsPublic(!isPublic);\n      let curStat = localStorage.getItem(\"public\");\n      localStorage.setItem(\n        \"public\",\n        curStat === \"public\" ? \"private\" : \"public\"\n      );\n      setIsPublic(localStorage.getItem(\"public\") === \"public\");\n    }\n    onPublic();\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"userTheme\", userTheme);\n  }, [userTheme]);\n\n  const handleThemeClick = () => {\n    setUserTheme(userTheme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const handleDeleteClick = () => {\n    setOpen(true);\n    //request\n\n    async function onSubmit() {\n      const email = localStorage.getItem(\"email\");\n      localStorage.setItem(\"email\", \"\");\n      const editedPerson = {\n        email: email,\n      };\n\n      console.log(JSON.stringify(editedPerson));\n\n      await fetch(`${url}/delete_user`, {\n        method: \"POST\",\n        body: JSON.stringify(editedPerson),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      handleLogoutClick();\n    }\n    onSubmit();\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n    setOpenPublic(false);\n  };\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Stack\n      justifyContent={\"start\"}\n      alignItems={\"center\"}\n      width=\"100%\"\n      mt={3}\n      ml={{ xs: 0, sm: \"110px\", md: \"240px\", lg: \"240px\" }}\n      height=\"100%\"\n      minHeight=\"100vh\"\n    >\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        sx={{ width: \"95%\" }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography sx={{ width: \"33%\", flexShrink: 0 }}>\n            Account Settings\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Button onClick={handleLogoutClick}>Logout</Button>\n          <Button onClick={handleDeleteClick}>Delete Account and Data</Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert\n              onClose={handleClose}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              {`Account Deleted :(`}\n            </Alert>\n          </Snackbar>\n        </AccordionDetails>\n\n        <AccordionDetails>\n          <Button onClick={handlePublicClick}>\n            Make Account {!isPublic ? \"Public\" : \"Private\"}\n          </Button>\n          <Snackbar\n            open={openPublic}\n            autoHideDuration={6000}\n            onClose={handleClose}\n          >\n            <Alert\n              onClose={handleClose}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              {localStorage.getItem(\"public\") !== \"public\" ? \"Account is Private now\" : \"Account is Public now\"}\n            </Alert>\n          </Snackbar>\n          <Button onClick={handleThemeClick}>\n            Switch To {userTheme === \"dark\" ? \"light\" : \"dark\"} Theme\n          </Button>\n\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert\n              onClose={handleClose}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              {`Account Deleted :(`}\n            </Alert>\n          </Snackbar>\n        </AccordionDetails>\n      </Accordion>\n    </Stack>\n  );\n};\n\nexport default Settings;\n"],"names":["navigate","useNavigate","useContext","GlobalState","isSignedIn","setIsSignedIn","userTheme","setUserTheme","useState","expanded","setExpanded","handleLogoutClick","localStorage","removeItem","open","setOpen","getItem","isPublic","setIsPublic","console","log","openPublic","setOpenPublic","useEffect","setItem","panel","handleClose","event","reason","justifyContent","alignItems","width","mt","ml","xs","sm","md","lg","height","minHeight","onChange","isExpanded","sx","expandIcon","id","flexShrink","onClick","email","editedPerson","JSON","stringify","fetch","url","method","body","headers","onSubmit","autoHideDuration","onClose","severity","publicObj","public","curStat","onPublic","to"],"sourceRoot":""}