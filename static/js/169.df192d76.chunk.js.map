{"version":3,"file":"static/js/169.df192d76.chunk.js","mappings":"ueA6DMA,EAAc,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACnD,OACE,UAACC,EAAA,EAAD,CAAMC,GAAI,CAACC,gBAAwC,SAAvBH,EAAMI,QAAQC,KAAkB,UAAY,WAAxE,WACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,SAACC,EAAA,EAAD,CAAQ,aAAW,WAAoBC,MAAOZ,IACjEE,GACC,SAACW,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACEC,QAAS,YAhDM,SAACd,GAAa,wCAEvC,2FACQe,EAAkB,CACtBC,SAAUC,aAAaC,QAAQ,SAC/BlB,SAAUA,GAHd,SAMQmB,MAAM,qCAAsC,CAChDC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBAVtB,OAaEC,OAAOC,SAASC,SAblB,4CAFuC,sBACvCC,QAAQC,IAAI7B,GAD2B,mCAiBvC8B,GAgCYC,CAAmB/B,IAFvB,wBAQA,SAIJgC,EAAe,SAAC,GAAmC,IAAjCjC,EAAgC,EAAhCA,KAAME,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC1C,OACE,UAACC,EAAA,EAAD,CAAMC,GAAI,CAACC,gBAAwC,SAAvBH,EAAMI,QAAQC,KAAkB,UAAY,WAAxE,WACE,SAACC,EAAA,EAAD,CAAYG,MAAOZ,IAClBE,GACC,SAACW,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACEC,QAAS,YA9CO,SAACf,GAAS,wCAEpC,2FACQgB,EAAkB,CACtBkB,MAAOhB,aAAaC,QAAQ,SAC5BgB,MAAOnC,GAHX,SAMQoB,MAAM,sCAAuC,CACjDC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBAVtB,OAaEC,OAAOC,SAASC,SAblB,4CAFoC,sBACpCC,QAAQC,IAAI9B,GADwB,mCAiBpC+B,GA8BYK,CAAoBpC,IAFxB,wBAQA,SAKK,SAASqC,EAAT,GAA6D,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9DZ,QAAQC,IAAIU,GACZ,IAAMrC,GAAQuC,EAAAA,EAAAA,KAERC,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,OAAQ,MACRC,QAAS/C,EAAMI,QAAQ4C,WAAWC,QAClCC,OAAQ,iBACRC,UAAW,GACXC,EAAG,EACHC,UAAW,UAGb,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAIA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAIA,GAAgBC,EAAAA,EAAAA,UACdD,EAAaE,IAAI,UAAY7C,aAAaC,QAAQ,aAD7C6C,GAAP,eAIA,GAA6DC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjEC,EAAP,EAAOA,WAAP,EAAmBC,cAAnB,EAAkCC,UAAlC,EAA6CC,aAE7C,OACE,4BACE,SAACxD,EAAA,EAAD,CAAQC,QAfO,kBAAM4C,GAAQ,IAeAY,eAAa,EAACC,kBAAgB,EAA3D,UACE,UAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,GAAhC,WACE,SAACC,EAAA,EAAD,CAAYC,MAAO1E,EAAMI,QAAQuE,QAAQC,KAAMC,QAAQ,YAAvD,SACG1C,GAAkBE,EAAKyC,UAE1B,SAACL,EAAA,EAAD,CAAYI,QAAQ,YAAYH,MAA8B,SAAvB1E,EAAMI,QAAQC,KAAkB,UAAY,OAAnF,SACG+B,UAIP,SAAC2C,EAAA,EAAD,CACExB,KAAMA,EACNyB,QA1Bc,kBAAMxB,GAAQ,IA2B5B,kBAAgB,oBAChB,mBAAiB,0BAJnB,UAME,SAACyB,EAAA,EAAD,CAAK/E,GAAIsC,EAAT,UACE,UAAC8B,EAAA,EAAD,CAAOE,QAAS,EAAhB,WACE,SAACC,EAAA,EAAD,CACES,GAAG,oBACHL,QAAQ,KACRM,UAAU,KACVT,MAAO1E,EAAMI,QAAQuE,QAAQC,KAJ/B,UAME,4BAASxC,MAEVE,EACGD,EAAK+C,KAAI,SAACC,GACR,OACE,SAACvD,EAAD,CAEEjC,KAAMwF,EACNtF,aAAciE,GAAcH,EAC5B7D,MAAOA,GAHFqF,MAOXhD,EAAK+C,KAAI,SAACC,EAAGC,GACX,OACE,SAAC1F,EAAD,CAEEC,KAAMwF,EAAExF,KACRC,SAAUuF,EAAEvF,SACZC,aAAciE,GAAcH,EAC5B7D,MAAOA,GAJFsF,gB,uDCzI3B,SAASC,EAASC,GAC6CA,EAAvDC,SAAN,IAAgBC,EAA6CF,EAA7CE,MAAOC,EAAsCH,EAAtCG,MAAOtD,EAA+BmD,EAA/BnD,KAAM2B,EAAyBwB,EAAzBxB,WAAe4B,GAAnD,OAA6DJ,EAA7D,GAMA,OACE,gCACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBT,GAAE,0BAAqBS,GACvB,uCAA+BA,IAC3BC,GALN,aAOGF,IAAUC,GAAStD,IAClB,SAAC4C,EAAA,EAAD,CAAK/E,GAAI,CAAEkD,EAAG,GAAd,UACE,SAACkB,EAAA,EAAD,CAAOE,QAAS,EAAGuB,eAAe,SAASC,WAAW,SAAtD,SACG3D,EAAK+C,KAAI,SAACC,EAAGM,GACZ,OAAO,SAACM,EAAA,EAAD,CAASC,UAAWlC,EAAwB3B,KAAMgD,GAAbM,aAe1D,SAASQ,EAAUR,GACjB,MAAO,CACLT,GAAG,cAAD,OAAgBS,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,SAASS,EAAT,GAA0C,IAArB/D,EAAoB,EAApBA,KACnB,GADuC,EAAd2B,YACCL,EAAAA,EAAAA,UAAS,IAAnC,eAAO+B,EAAP,KAAcW,EAAd,KAMA,OACE,UAACpB,EAAA,EAAD,CAAK/E,GAAI,CAAE2C,MAAO,QAAlB,WACE,SAACoC,EAAA,EAAD,CAAK/E,GAAI,CAAEoG,aAAc,EAAGC,YAAa,WAAzC,UACE,UAACC,EAAA,EAAD,CACEd,MAAOA,EACPe,SATa,SAACC,EAAOC,GAC3BN,EAASM,IASH,aAAW,qBACX9B,QAAQ,YAJV,WAME,SAAC+B,EAAA,GAAD,QAAKC,MAAM,SAAYV,EAAU,MACjC,SAACS,EAAA,GAAD,QAAKC,MAAM,gBAAmBV,EAAU,WAG5C,SAACZ,EAAD,CAAUvB,WAA8C,OAAlCjD,aAAaC,QAAQ,SAAmB0E,MAAOA,EAAOC,MAAO,EAAGtD,KAAMA,EAAKyE,mBAAjG,oBAGA,SAACvB,EAAD,CAAUvB,YAAY,EAAM0B,MAAOA,EAAOC,MAAO,EAAGtD,KAAMA,EAAK0E,sBAA/D,6BAON,IAAMvE,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPE,QAAS,iBACTG,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAoZL,EAjZuB,SAAC,GAAc,IAAZf,EAAW,EAAXA,KACxBX,QAAQC,IAAIU,GACZ,IAAMrC,GAAQuC,EAAAA,EAAAA,KACRyE,GAAUC,EAAAA,EAAAA,GAAcjH,EAAMkH,YAAYC,GAAG,OAC7CC,EAAS,uBAAmBJ,EAAU,MAAQ,KAArC,OAEf,GAAuBvD,EAAAA,EAAAA,MAAhBC,GAAP,eAIA,GAAgBC,EAAAA,EAAAA,UACdD,EAAaE,IAAI,UAAY7C,aAAaC,QAAQ,aAD7C6C,GAAP,eAIA,GACEC,EAAAA,EAAAA,YAAWC,EAAAA,GADLC,EAAR,EAAQA,WAGR,GAHA,EAAoBC,cAApB,EAAmCC,UAAnC,EAA8CC,cAGtBR,EAAAA,EAAAA,WAAS,IAAjC,eAAOJ,EAAP,KAAaC,EAAb,KAEM6D,EAAc,WAAM,wCAGxB,6FACQtF,EAAQhB,aAAaC,QAAQ,SAC7BsG,EAAe,CACnBC,UAAWC,EACXC,SAAUC,GACVC,IAAKC,GACL7F,MAAOA,GAGTL,QAAQC,IAAIP,KAAKC,UAAUiG,IAT7B,SAWQrG,MAAM,GAAD,OAAI4G,EAAAA,EAAJ,mBAA0B,CACnC3G,OAAQ,OACRC,KAAMC,KAAKC,UAAUiG,GACrBhG,QAAS,CACP,eAAgB,sBAftB,4CAHwB,sBACxBkC,GAAQ,GADgB,mCAsBxBsE,IAGF,GAA8CnE,EAAAA,EAAAA,UAAStB,EAAKkF,WAA5D,eAAOC,EAAP,KAAwBO,EAAxB,KACA,GAA4DpE,EAAAA,EAAAA,WAAS,GAArE,eAAOqE,EAAP,KAA+BC,EAA/B,KACA,GAA0DtE,EAAAA,EAAAA,UAAS,IAAnE,eAAOuE,EAAP,KAA8BC,EAA9B,KAEA,IAA4CxE,EAAAA,EAAAA,UAAStB,EAAKoF,UAA1D,iBAAOC,GAAP,MAAuBU,GAAvB,MACA,IAA0DzE,EAAAA,EAAAA,WAAS,GAAnE,iBAAO0E,GAAP,MAA8BC,GAA9B,MACA,IAAwD3E,EAAAA,EAAAA,UAAS,IAAjE,iBAAO4E,GAAP,MAA6BC,GAA7B,MAEA,IAAkC7E,EAAAA,EAAAA,UAAStB,EAAKsF,KAAhD,iBAAOC,GAAP,MAAkBa,GAAlB,MACA,IAAgD9E,EAAAA,EAAAA,WAAS,GAAzD,iBAAO+E,GAAP,MAAyBC,GAAzB,MACA,IAA8ChF,EAAAA,EAAAA,UAAS,IAAvD,iBAAOiF,GAAP,MAAwBC,GAAxB,OAQAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQC,EAAchI,aAAaC,QAAQ,SACnCgI,EAAajI,aAAaC,QAAQ,YAClCiI,EAAcvF,EAAaE,IAAI,QACrClC,QAAQC,IAAI,CACVoH,YAAaA,EACbC,WAAYA,EACZC,YAAaA,IAPjB,SASQhI,MAAM,GAAD,OAAI4G,EAAAA,EAAJ,YAAmB,CAC5B3G,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB0H,YAAaA,EACbC,WAAYA,EACZC,YAAaA,IAEf3H,QAAS,CACP,eAAgB,sBAjBtB,4CADc,uBAAC,WAAD,wBAsBdwG,KACC,CAACpE,IA2BJ,IAzBA,IAAMwF,IAAQC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC5BC,QAAS,SAmBX,IAAwDzF,EAAAA,EAAAA,UACtDtB,EAAKgH,gBADP,iBAAOC,GAAP,MAA6BC,GAA7B,MAIMC,GAAY,GACTlE,GAAI,EAAGA,GAAIjD,EAAKgH,eAAevE,OAAQQ,KAC9CkE,GAAUC,KAAKpH,EAAKgH,eAAe/D,IAApB,MAGjB,QAAkC3B,EAAAA,EAAAA,UAChCK,GAAcH,EAAQ,EAAI6F,OAAOrH,EAAKsH,eAAiB,GADzD,iBAAOC,GAAP,MAAkBC,GAAlB,MApHmC,0CAyHnC,6FACQhJ,EAAkB,CACtBC,SAAUC,aAAaC,QAAQ,SAC/B4I,UAAWvH,EAAKyH,KAElBpI,QAAQC,IAAId,GAEM,IAAd+I,GAPN,gCAQqB3I,MAAM,mCAAoC,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBAZxB,OAQIyI,EARJ,iCAe2B,IAAdH,GAfb,kCAgBqB3I,MAAM,qCAAsC,CAC3DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBApBxB,QAgBIyI,EAhBJ,kBAyBOA,EAASC,GAzBhB,wBA4BItI,QAAQC,IAAIoI,GA5BhB,4CAgCoBA,EAASE,OAhC7B,WAgCQC,EAhCR,OAiCExI,QAAQC,IAAIuI,IACRA,EAAIC,QAlCV,kCAmCqBlJ,MAAM,qCAAsC,CAC3DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEU,MAAOM,EAAKyH,MACnCxI,QAAS,CACP,eAAgB,sBAvCxB,YAmCIyI,EAnCJ,QA2CkBC,GA3ClB,wBA8CMtI,QAAQC,IAAIoI,GA9ClB,4CAkD+BA,EAASE,OAlDxC,QAkDUG,EAlDV,OAmDI1I,QAAQC,IAAI,iBAAmByI,GAC/Bb,GAAwBa,EAAaA,cApDzC,6CAzHmC,sBA4MnC,OArFA1I,QAAQC,IAAIiI,KA0DZd,EAAAA,EAAAA,YAAU,WACJtB,EAAgB1C,OAAS,GAAKoD,GAChCC,EAAyB,IACzBF,GAA0B,IAE1BU,IAAoB,KAErB,CAACnB,EAAiBU,KAErBY,EAAAA,EAAAA,YAAU,WACJpB,GAAe5C,OAAS,GAAKyD,IAC/BC,GAAwB,IACxBF,IAAyB,IAEzBK,IAAoB,KAErB,CAACjB,GAAgBa,MAEpBO,EAAAA,EAAAA,YAAU,WACJlB,GAAU9C,OAAS,GAAK8C,GAAU9C,OAAS,KAC7C+D,GAAmB,IACnBF,IAAoB,IAEpBA,IAAoB,KAErB,CAACf,GAAWgB,MAGb,UAACyB,EAAA,GAAD,CAAMC,WAAS,EAAC9F,QAAS,EAAzB,WACE,SAAC6F,EAAA,GAAD,CACExH,MAAOuE,EACPrB,eAAgB,SAChBC,WAAY,SACZuE,MAAI,EACJD,WAAS,EALX,UAOE,UAACD,EAAA,GAAD,CACEG,GAAI,GACJC,GAAI,EACJF,MAAI,EACJD,WAAS,EACTvE,eAAgB,eAChBxB,UAAW,MACXC,QAAS,EAPX,WASE,SAAC6F,EAAA,GAAD,CAAMG,GAAI,EAAGD,MAAI,EAAjB,UACE,mBAAOG,QAAQ,yBAAf,WACE,SAACxB,GAAD,CACEyB,OAAO,YACPzF,GAAG,yBACH0F,KAAK,OACLnE,SAAU,SAACoE,GAAD,OAzIC,SAACA,GACxBA,EAAEC,iBAEF,IAAIC,EAAW,IAAIC,SAHW,wCAM9B,8FACQ/J,MAAM,GAAD,OAAI4G,EAAAA,EAAJ,oBAA2B,CACpC3G,OAAQ,OACRC,KAAM4J,IAHV,OAKExJ,OAAOC,SAASC,SALlB,4CAN8B,sBAI9BsJ,EAASE,OAAO,eAAgBJ,EAAEK,OAAOC,MAAM,IAC/CJ,EAASE,OAAO,QAASlK,aAAaC,QAAQ,UALhB,mCAa9B8G,GA4H6BsD,CAAiBP,IAClCQ,WAAYrH,GAAcH,MAE5B,SAACyH,EAAA,EAAD,CACE5G,MAAO,UACPS,UAAU,OACV,aAAW,yBACXkG,WAAYrH,GAAcH,GAJ5B,SAMGxB,EAAKkJ,WAAWzG,OAAS,yBAAyBA,QACjD,gBAEE0G,IAAKnJ,EAAKkJ,WACVE,IAAI,sBACJ5I,MAAO,IACPC,OAAQ,IACRN,MAAO,CAAEkJ,aAAc,UAGzB,SAACC,EAAA,EAAD,CAAmBzL,GAAI,CAAE0L,SAAU,mBAK3C,SAACvB,EAAA,GAAD,CAAMG,GAAI,EAAGD,MAAI,EAAjB,UACE,UAACjG,EAAA,EAAD,CAAOC,UAAU,SAAjB,WACE,SAACE,EAAA,EAAD,CACEC,MAA8B,SAAvB1E,EAAMI,QAAQC,KAAkB,OAAS,OAChDwE,QAAS,KAFX,mBAIM2C,EAJN,YAIyBE,OAEzB,SAACjD,EAAA,EAAD,CACEC,MAA8B,SAAvB1E,EAAMI,QAAQC,KAAkB,OAAS,OAChDwE,QAAS,YAFX,oBAIOxC,EAAKvC,kBAIhB,UAACuK,EAAA,GAAD,CAAMG,GAAI,EAAGD,MAAI,EAAjB,UACGvG,GAAcH,GACb,SAACyH,EAAA,EAAD,CACE5G,MAAO,UACPG,QAAS,WACTjE,QA/PK,kBAAM4C,GAAQ,IA4PrB,UAKE,SAACqI,EAAA,EAAD,MAEA7H,GACF,UAACsH,EAAA,EAAD,CACE5G,MAAM,UACN9D,QAAS,YAxRY,oCAyRnBkL,GACAjC,GAA2B,IAAdD,GAAkB,EAAI,IAJvC,UAOiB,IAAdA,IACC,SAAC,IAAD,CAAgBlF,MAAM,aAEtB,SAAC,IAAD,CAAiBA,MAAM,YAEV,IAAdkF,GAAkB,YAAc,YAEjC,MACJ,SAAC7E,EAAA,EAAD,CACExB,KAAMA,EACNyB,QAASqC,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,UAME,UAACpC,EAAA,EAAD,CAAK/E,GAAIsC,EAAT,WACE,SAACiC,EAAA,EAAD,CACEC,MAAO,OACPQ,GAAG,oBACHL,QAAQ,KACRM,UAAU,KAJZ,mCASA,SAAC4G,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACThH,GAAG,kBACH2B,MAAM,aACNhH,KAAK,kBACLsM,aAAa,aACbC,WAAS,EACTC,MAAOrE,EACPvB,SAAU,SAACoE,GAAD,OAAO9C,EAAmB8C,EAAEK,OAAOxF,QAC7C4G,WAAYpE,KAEd,SAAC6D,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACThH,GAAG,iBACH2B,MAAM,YACNhH,KAAK,iBACLsM,aAAa,aACbC,WAAS,EACTC,MAAOhE,GACP5B,SAAU,SAACoE,GAAD,OAAOzC,GAAkByC,EAAEK,OAAOxF,QAC5C4G,WAAY/D,MAEd,SAACwD,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACThH,GAAG,MACH2B,MAAM,MACNhH,KAAK,MACLsM,aAAa,aACbC,WAAS,EACTC,MAAO3D,GACPjC,SAAU,SAACoE,GAAD,OAAOpC,GAAaoC,EAAEK,OAAOxF,QACvC4G,WAAY1D,MAEd,SAACjI,EAAA,EAAD,CACEkE,QAAQ,SACRH,MAAO,UACP2G,SACE3C,IACAL,IACAL,EAEFpH,QAASyG,EARX,kCAiBV,SAACgD,EAAA,GAAD,CAAME,MAAI,EAACgC,GAAI,IAAf,UACE,SAAC9H,EAAA,EAAD,CACEI,QAAQ,KACRH,MAA8B,SAAvB1E,EAAMI,QAAQC,KAAkB,OAAS,OAFlD,mBAIMuH,SAGR,SAACyC,EAAA,GAAD,CAAME,MAAI,EAACgC,GAAI,IAAK/B,GAAI,GAAxB,UACE,UAAClG,EAAA,EAAD,CAAOC,UAAW,MAAOC,QAAS,EAAlC,WACE,SAACtC,EAAD,CACEE,SAAU,YACVC,KAAMiH,GACNhH,SAAS,KAGX,SAACJ,EAAD,CACEE,SAAU,YACVC,KAAMA,EAAKmK,eACXlK,SAAS,KAGX,SAACJ,EAAD,CACEE,SAAU,SACVC,KAAMA,EAAKoK,gBACXnK,SAAO,UAIb,SAAC+H,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,SAACpE,EAAD,CAAW/D,KAAMA,EAAM2B,YAAU","sources":["components/FolllowingList.jsx","pages/Profile/ProfileDetails.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Stack, useTheme } from \"@mui/material\";\nimport { Card, CardHeader, Avatar } from \"@mui/material\";\nimport { CardActions } from \"@mui/material\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useContext, useState } from \"react\";\nimport GlobalState from \"../contexts/GlobalStates\";\n\nconst followingList = [\n  { name: \"Bruce Banner\", bio: \"Smash\" },\n  { name: \"Thor\", bio: \"Worthy\" },\n  { name: \"Wong\", bio: \"..\" },\n];\n\nconst topics = [\"Marvel\", \"Twitter\", \"DC\", \"Netflix\", \"Cricket\"];\n\nconst handleUnfollowUser = (username) => {\n  console.log(username);\n  async function updateUnfollow() {\n    const followRecipient = {\n      follower: localStorage.getItem(\"email\"),\n      username: username,\n    };\n\n    await fetch(`http://localhost:5000/unfollowUser`, {\n      method: \"POST\",\n      body: JSON.stringify(followRecipient),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    window.location.reload();\n  }\n  updateUnfollow();\n};\n\nconst handleUnfollowTopic = (name) => {\n  console.log(name);\n  async function updateUnfollow() {\n    const followRecipient = {\n      email: localStorage.getItem(\"email\"),\n      topic: name,\n    };\n\n    await fetch(`http://localhost:5000/unfollowTopic`, {\n      method: \"POST\",\n      body: JSON.stringify(followRecipient),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    window.location.reload();\n  }\n  updateUnfollow();\n};\n\n\nconst DisplayCard = ({ name, username, showUnfollow, theme }) => {\n  return (\n    <Card sx={{backgroundColor: theme.palette.mode === \"dark\" ? \"#121212\" : \"#CFB991\"}}>\n      <CardHeader avatar={<Avatar aria-label=\"recipe\"></Avatar>} title={name} />\n      {showUnfollow ? (\n        <CardActions>\n          <Button\n            onClick={() => {\n              handleUnfollowUser(username);\n            }}\n          >\n            Unfollow\n          </Button>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n};\nconst DisplayTopic = ({ name, showUnfollow, theme }) => {\n  return (\n    <Card sx={{backgroundColor: theme.palette.mode === \"dark\" ? \"#121212\" : \"#CFB991\"}}>\n      <CardHeader title={name} />\n      {showUnfollow ? (\n        <CardActions>\n          <Button\n            onClick={() => {\n              handleUnfollowTopic(name);\n            }}\n          >\n            Unfollow\n          </Button>\n        </CardActions>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default function FollowingList({ number, property, data, isTopic }) {\n  console.log(data);\n  const theme = useTheme();\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    height: \"75%\",\n    bgcolor: theme.palette.background.default,\n    border: \"2px solid #ddd\",\n    boxShadow: 24,\n    p: 4,\n    overflowY: \"scroll\",\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [searchParams] = useSearchParams();\n\n  // const myEmail = localStorage.getItem(\"email\")\n\n  const [match] = useState(\n    searchParams.get(\"user\") === localStorage.getItem(\"username\")\n  );\n\n  const {isSignedIn, setIsSignedIn, userTheme, setUserTheme} = useContext(GlobalState);\n\n  return (\n    <div>\n      <Button onClick={handleOpen} disableRipple disableElevation>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography color={theme.palette.primary.main} variant=\"subtitle2\">\n            {number ? number : data.length}\n          </Typography>\n          <Typography variant=\"subtitle2\" color={theme.palette.mode === \"dark\" ? \"#c4c4c4\" : \"#222\"}>\n            {property}\n          </Typography>\n        </Stack>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={1}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h4\"\n              component=\"h2\"\n              color={theme.palette.primary.main}\n            >\n              <strong>{property}</strong>\n            </Typography>\n            {isTopic\n              ? data.map((d) => {\n                  return (\n                    <DisplayTopic\n                      key={d}\n                      name={d}\n                      showUnfollow={isSignedIn && match}\n                      theme={theme}\n                    />\n                  );\n                })\n              : data.map((d, i) => {\n                  return (\n                    <DisplayCard\n                      key={i}\n                      name={d.name}\n                      username={d.username}\n                      showUnfollow={isSignedIn && match}\n                      theme={theme}\n                    />\n                  );\n                })}\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import {\n  useTheme,\n  useMediaQuery,\n  Grid,\n  Stack,\n  Typography,\n  IconButton,\n  Modal,\n  TextField,\n  Button,\n  styled,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport {\n  NotificationsOutlined as FollowEmptyIcon,\n  NotificationsActiveRounded as FollowFillIcon,\n} from \"@mui/icons-material\";\nimport { useEffect, useContext } from \"react\";\nimport GlobalState from \"../../contexts/GlobalStates\";\nimport { Content } from \"../../components/Content/Content\";\n\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { url } from \"../../ENV\";\nimport FollowingList from \"../../components/FolllowingList\";\n\n// global.Buffer = global.Buffer || require(\"buffer\").Buffer;\n\nfunction TabPanel(props) {\n  let { children, value, index, data, isSignedIn, ...other } = props;\n  const isPosts = children === \"Posts\";\n  // console.log(data);\n  // data.reverse();\n  // console.log(isSignedIn);\n  // console.log(data);\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && data && (\n        <Box sx={{ p: 3 }}>\n          <Stack spacing={1} justifyContent=\"center\" alignItems=\"center\">\n            {data.map((d, index) => {\n              return <Content isProfile={isSignedIn} key={index} data={d} />;\n            })}\n          </Stack>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction BasicTabs({ data, isSignedIn }) {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Posts\" {...a11yProps(0)} />\n          <Tab label=\"Interactions\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel isSignedIn={localStorage.getItem(\"email\") === null} value={value} index={0} data={data.createdPostsObject}>\n        Posts\n      </TabPanel>\n      <TabPanel isSignedIn={true} value={value} index={1} data={data.interactedPostsObject}>\n        Interactions\n      </TabPanel>\n    </Box>\n  );\n}\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"secondary.main\",\n  border: \"2px solid #000\",\n  boxShadow: 50,\n  p: 4,\n};\n\nconst ProfileDetails = ({ data }) => {\n  console.log(data);\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const widthCalc = `calc(100vw - ${matches ? \"200\" : \"75\"}px)`;\n\n  const [searchParams] = useSearchParams();\n\n  // const myEmail = localStorage.getItem(\"email\")\n\n  const [match] = useState(\n    searchParams.get(\"user\") === localStorage.getItem(\"username\")\n  );\n\n  const { isSignedIn, setIsSignedIn, userTheme, setUserTheme } =\n    useContext(GlobalState);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n\n    async function onSubmit() {\n      const email = localStorage.getItem(\"email\");\n      const editedPerson = {\n        firstName: changeFirstName,\n        lastName: changeLastName,\n        bio: changeBio,\n        email: email,\n      };\n\n      console.log(JSON.stringify(editedPerson));\n\n      await fetch(`${url}/updateUserInfo`, {\n        method: \"POST\",\n        body: JSON.stringify(editedPerson),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n    onSubmit();\n  };\n\n  const [changeFirstName, setChangeFirstName] = useState(data.firstName);\n  const [invalidChangeFirstName, setInvalidChangeFirstName] = useState(false);\n  const [changeFirstNameErrMsg, setChangeFirstNameErrMsg] = useState(\"\");\n\n  const [changeLastName, setChangeLastName] = useState(data.lastName);\n  const [invalidChangeLastName, setInvalidChangeLastName] = useState(false);\n  const [changeLastNameErrMsg, setChangeLastNameErrMsg] = useState(\"\");\n\n  const [changeBio, setChangeBio] = useState(data.bio);\n  const [invalidChangeBio, setInvalidChangeBio] = useState(true);\n  const [changeBioErrMsg, setChangeBioErrMsg] = useState(\"\");\n\n  // const buf = Buffer.from(data.profilePic.split(\"base64,\")[1]).toString(\n  //   \"base64\"\n  // );\n\n  // console.log(buf);\n\n  useEffect(() => {\n    async function onSubmit() {\n      const loggedEmail = localStorage.getItem(\"email\");\n      const loggedUser = localStorage.getItem(\"username\");\n      const profileUser = searchParams.get(\"user\");\n      console.log({\n        loggedEmail: loggedEmail,\n        loggedUser: loggedUser,\n        profileUser: profileUser,\n      });\n      await fetch(`${url}/getUser`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          loggedEmail: loggedEmail,\n          loggedUser: loggedUser,\n          profileUser: profileUser,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n    onSubmit();\n  }, [searchParams]);\n\n  const Input = styled(\"input\")({\n    display: \"none\",\n  });\n\n  const handleFileChange = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"profileImage\", e.target.files[0]);\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    async function onSubmit() {\n      await fetch(`${url}/addProfileImage`, {\n        method: \"POST\",\n        body: formData,\n      });\n      window.location.reload();\n    }\n    onSubmit();\n  };\n\n  const [changeFollowingUsers, setChangeFollowingUsers] = useState(\n    data.followingUsers\n  );\n\n  const justNames = [];\n  for (let i = 0; i < data.followingUsers.length; i++) {\n    justNames.push(data.followingUsers[i][\"name\"]);\n  }\n\n  const [following, setFollowing] = useState(\n    isSignedIn && match ? 0 : Number(data.loggedFollows) + 1\n  );\n  console.log(following);\n\n  async function updateUserFollow() {\n    const followRecipient = {\n      follower: localStorage.getItem(\"email\"),\n      following: data._id,\n    };\n    console.log(followRecipient);\n    let response;\n    if (following === 1) {\n      response = await fetch(`http://localhost:5000/followUser`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } else if (following === 2) {\n      response = await fetch(`http://localhost:5000/unfollowUser`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n\n    if (!response.ok) {\n      // const message = `An error oc`;\n      // window.alert(message);\n      console.log(response);\n      return;\n    }\n\n    const res = await response.json();\n    console.log(res);\n    if (res.message) {\n      response = await fetch(`http://localhost:5000/getFollowers`, {\n        method: \"POST\",\n        body: JSON.stringify({ email: data._id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        // const message = `An error oc`;\n        // window.alert(message);\n        console.log(response);\n        return;\n      }\n\n      const newFollowing = await response.json();\n      console.log(\"New Following:\" + newFollowing);\n      setChangeFollowingUsers(newFollowing.newFollowing);\n    }\n  }\n\n  useEffect(() => {\n    if (changeFirstName.length > 0 && changeFirstNameErrMsg) {\n      setChangeFirstNameErrMsg(\"\");\n      setInvalidChangeFirstName(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeFirstName, changeFirstNameErrMsg]);\n\n  useEffect(() => {\n    if (changeLastName.length > 0 && changeLastNameErrMsg) {\n      setChangeLastNameErrMsg(\"\");\n      setInvalidChangeLastName(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeLastName, changeLastNameErrMsg]);\n\n  useEffect(() => {\n    if (changeBio.length > 0 && changeBio.length < 240) {\n      setChangeBioErrMsg(\"\");\n      setInvalidChangeBio(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeBio, changeBioErrMsg]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        width={widthCalc}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        item\n        container\n      >\n        <Grid\n          sm={12}\n          mt={2}\n          item\n          container\n          justifyContent={\"space-around\"}\n          direction={\"row\"}\n          spacing={4}\n        >\n          <Grid sm={2} item>\n            <label htmlFor=\"upload-profile-picture\">\n              <Input\n                accept=\"image/png\"\n                id=\"upload-profile-picture\"\n                type=\"file\"\n                onChange={(e) => handleFileChange(e)}\n                disabled={!(isSignedIn && match)}\n              />\n              <IconButton\n                color={\"primary\"}\n                component=\"span\"\n                aria-label=\"upload profile picture\"\n                disabled={!(isSignedIn && match)}\n              >\n                {data.profilePic.length > \"data:image/png;base64,\".length ? (\n                  <img\n                    // src={`data:image/png;base64,${buf}`}\n                    src={data.profilePic}\n                    alt=\"profile pic of user\"\n                    width={100}\n                    height={100}\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ) : (\n                  <AccountCircleIcon sx={{ fontSize: \"100px\" }} />\n                )}\n              </IconButton>\n            </label>\n          </Grid>\n          <Grid sm={7} item>\n            <Stack direction=\"column\">\n              <Typography\n                color={theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"}\n                variant={\"h4\"}\n              >\n                {`${changeFirstName} ${changeLastName}`}\n              </Typography>\n              <Typography\n                color={theme.palette.mode === \"dark\" ? \"#ddd\" : \"#222\"}\n                variant={\"subtitle1\"}\n              >\n                {`@${data.username}`}\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid sm={2} item>\n            {isSignedIn && match ? (\n              <IconButton\n                color={\"primary\"}\n                variant={\"outlined\"}\n                onClick={handleOpen}\n              >\n                <EditIcon />\n              </IconButton>\n            ) : isSignedIn ? (\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  updateUserFollow();\n                  setFollowing(following === 1 ? 2 : 1);\n                }}\n              >\n                {following === 2 ? (\n                  <FollowFillIcon color=\"primary\" />\n                ) : (\n                  <FollowEmptyIcon color=\"primary\" />\n                )}\n                {following === 2 ? \"Following\" : \"Follow\"}\n              </IconButton>\n            ) : null}\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"modal-modal-title\"\n              aria-describedby=\"modal-modal-description\"\n            >\n              <Box sx={style}>\n                <Typography\n                  color={\"#fff\"}\n                  id=\"modal-modal-title\"\n                  variant=\"h6\"\n                  component=\"h2\"\n                >\n                  Edit Profile Details\n                </Typography>\n\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"changeFirstName\"\n                  label=\"First Name\"\n                  name=\"changeFirstName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeFirstName}\n                  onChange={(e) => setChangeFirstName(e.target.value)}\n                  helperText={changeFirstNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"changeLastName\"\n                  label=\"Last Name\"\n                  name=\"changeLastName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeLastName}\n                  onChange={(e) => setChangeLastName(e.target.value)}\n                  helperText={changeLastNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"Bio\"\n                  label=\"Bio\"\n                  name=\"bio\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeBio}\n                  onChange={(e) => setChangeBio(e.target.value)}\n                  helperText={changeBioErrMsg}\n                />\n                <Button\n                  variant=\"filled\"\n                  color={\"success\"}\n                  disabled={\n                    invalidChangeBio ||\n                    invalidChangeLastName ||\n                    invalidChangeFirstName\n                  }\n                  onClick={handleClose}\n                >\n                  Submit\n                </Button>\n              </Box>\n            </Modal>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item ml={2.5}>\n        <Typography\n          variant=\"h6\"\n          color={theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"}\n        >\n          {`${changeBio}`}\n        </Typography>\n      </Grid>\n      <Grid item ml={2.5} sm={12}>\n        <Stack direction={\"row\"} spacing={3}>\n          <FollowingList\n            property={\"Followers\"}\n            data={changeFollowingUsers}\n            isTopic={false}\n          />\n\n          <FollowingList\n            property={\"Following\"}\n            data={data.usersFollowing}\n            isTopic={false}\n          />\n\n          <FollowingList\n            property={\"Topics\"}\n            data={data.topicsFollowing}\n            isTopic\n          />\n        </Stack>\n      </Grid>\n      <Grid item sm={12}>\n        <BasicTabs data={data} isSignedIn/>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileDetails;\n"],"names":["DisplayCard","name","username","showUnfollow","theme","Card","sx","backgroundColor","palette","mode","CardHeader","avatar","Avatar","title","CardActions","Button","onClick","followRecipient","follower","localStorage","getItem","fetch","method","body","JSON","stringify","headers","window","location","reload","console","log","updateUnfollow","handleUnfollowUser","DisplayTopic","email","topic","handleUnfollowTopic","FollowingList","number","property","data","isTopic","useTheme","style","position","top","left","transform","width","height","bgcolor","background","default","border","boxShadow","p","overflowY","React","open","setOpen","useSearchParams","searchParams","useState","get","match","useContext","GlobalState","isSignedIn","setIsSignedIn","userTheme","setUserTheme","disableRipple","disableElevation","Stack","direction","spacing","Typography","color","primary","main","variant","length","Modal","onClose","Box","id","component","map","d","i","TabPanel","props","children","value","index","other","role","hidden","justifyContent","alignItems","Content","isProfile","a11yProps","BasicTabs","setValue","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","label","createdPostsObject","interactedPostsObject","matches","useMediaQuery","breakpoints","up","widthCalc","handleClose","editedPerson","firstName","changeFirstName","lastName","changeLastName","bio","changeBio","url","onSubmit","setChangeFirstName","invalidChangeFirstName","setInvalidChangeFirstName","changeFirstNameErrMsg","setChangeFirstNameErrMsg","setChangeLastName","invalidChangeLastName","setInvalidChangeLastName","changeLastNameErrMsg","setChangeLastNameErrMsg","setChangeBio","invalidChangeBio","setInvalidChangeBio","changeBioErrMsg","setChangeBioErrMsg","useEffect","loggedEmail","loggedUser","profileUser","Input","styled","display","followingUsers","changeFollowingUsers","setChangeFollowingUsers","justNames","push","Number","loggedFollows","following","setFollowing","_id","response","ok","json","res","message","newFollowing","Grid","container","item","sm","mt","htmlFor","accept","type","e","preventDefault","formData","FormData","append","target","files","handleFileChange","disabled","IconButton","profilePic","src","alt","borderRadius","AccountCircle","fontSize","Edit","updateUserFollow","TextField","margin","required","fullWidth","autoComplete","autoFocus","error","helperText","ml","usersFollowing","topicsFollowing"],"sourceRoot":""}