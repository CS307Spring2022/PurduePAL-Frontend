{"version":3,"file":"static/js/768.cf7abca6.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Explore.js","pages/Explore/Explore.jsx","../node_modules/@mui/icons-material/esm/NotificationsActiveRounded.js","../node_modules/@mui/icons-material/esm/NotificationsOutlined.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z\"\n}), 'Explore');","import {\n  IconButton,\n  Typography,\n  Stack,\n  Card,\n  CardHeader,\n  useTheme,\n} from \"@mui/material\";\nimport {\n  NotificationsOutlined as FollowEmptyIcon,\n  NotificationsActiveRounded as FollowFillIcon,\n  Explore as ExploreIcon,\n} from \"@mui/icons-material\";\nimport { Navigate } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\n\nimport GlobalState from \"../../contexts/GlobalStates\";\n\n// const topics = [\n//   { name: \"Marvel\" },\n//   { name: \"Twitter\" },\n//   { name: \"DC\" },\n//   { name: \"Netflix\" },\n//   { name: \"Cricket\" },\n// ];\n\nconst TopicCard = ({ data, theme }) => {\n  const [followed, setFollowed] = useState(\n    data.usersFollowing.includes(localStorage.getItem(\"email\"))\n  );\n  const topic = data._id.replaceAll('\"', \"\");\n\n  async function updateFollow() {\n    const followRecipient = {\n      email: localStorage.getItem(\"email\"),\n      topic: topic,\n    };\n    // console.log(followRecipient);\n    let response;\n    if (!followed) {\n      response = await fetch(`http://localhost:5000/followTopic`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } else {\n      response = await fetch(`http://localhost:5000/unfollowTopic`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n\n    if (!response.ok) {\n      // const message = `An error oc`;\n      // window.alert(message);\n      // console.log(response);\n      return;\n    }\n\n    const msg = await response.json();\n    // console.log(msg);\n  }\n\n  return (\n    <Card\n      sx={{\n        padding: \"10px\",\n        width: \"80vw\",\n        maxWidth: { sm: 400, md: 500, lg: 600, xl: 600 },\n        maxHeight: \"150vh\",\n        borderRadius: \"15px\",\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#121212\" : \"#CFB991\"\n      }}\n    >\n      <CardHeader title={topic} />\n      <IconButton href={\"/purduepal-fe/topicFeed?topic=\" + topic}>\n        <ExploreIcon color=\"primary\" />\n        <Typography color=\"primary\" sx={{ marginLeft: 1 }}>\n          Explore\n        </Typography>\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          updateFollow();\n          setFollowed(!followed);\n        }}\n      >\n        {followed ? (\n          <FollowFillIcon color=\"primary\" />\n        ) : (\n          <FollowEmptyIcon color=\"primary\" />\n        )}\n        <Typography color=\"primary\" sx={{ marginLeft: 1 }}>\n          {followed ? \"Following\" : \"Follow\"}\n        </Typography>\n      </IconButton>\n    </Card>\n  );\n};\n\nconst Explore = () => {\n  const theme = useTheme();\n  const {isSignedIn, setIsSignedIn, userTheme, setUserTheme} = useContext(GlobalState);\n\n  const [topicLists, setTopicLists] = useState([]);\n\n  useEffect(() => {\n    async function getTopics() {\n      const response = await fetch(`http://localhost:5000/topics`);\n      if (!response.ok) {\n        const message = `An error oc`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      // console.log(records[0][\"_id\"])\n      setTopicLists(records);\n      // console.log(records);\n    }\n\n    // const topicTimer = setInterval(() => {\n    //   getTopics();\n    // }, 650);\n    // return () => clearInterval(topicTimer);\n    getTopics();\n  }, []);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      <Typography sx={{ fontSize: 50 }} color={theme.palette.primary.main}>\n        Explore Topics\n      </Typography>\n      {topicLists &&\n        topicLists.map((d, i) => {\n          return <TopicCard key={i} data={d} theme={theme}/>;\n        })}\n    </Stack>\n  );\n};\n\nexport default Explore;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 16v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.68-1.5-1.51-1.5S10.5 3.17 10.5 4v.68C7.63 5.36 6 7.92 6 11v5l-1.3 1.29c-.63.63-.19 1.71.7 1.71h13.17c.89 0 1.34-1.08.71-1.71L18 16zm-6.01 6c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zM6.77 4.73c.42-.38.43-1.03.03-1.43-.38-.38-1-.39-1.39-.02C3.7 4.84 2.52 6.96 2.14 9.34c-.09.61.38 1.16 1 1.16.48 0 .9-.35.98-.83.3-1.94 1.26-3.67 2.65-4.94zM18.6 3.28c-.4-.37-1.02-.36-1.4.02-.4.4-.38 1.04.03 1.42 1.38 1.27 2.35 3 2.65 4.94.07.48.49.83.98.83.61 0 1.09-.55.99-1.16-.38-2.37-1.55-4.48-3.25-6.05z\"\n}), 'NotificationsActiveRounded');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\"\n}), 'NotificationsOutlined');"],"names":["createSvgIcon","_jsx","d","TopicCard","data","theme","useState","usersFollowing","includes","localStorage","getItem","followed","setFollowed","topic","_id","replaceAll","followRecipient","email","fetch","method","body","JSON","stringify","headers","response","ok","json","Card","sx","padding","width","maxWidth","sm","md","lg","xl","maxHeight","borderRadius","backgroundColor","palette","mode","CardHeader","title","IconButton","href","Explore","color","Typography","marginLeft","onClick","updateFollow","useTheme","useContext","GlobalState","isSignedIn","setIsSignedIn","userTheme","setUserTheme","topicLists","setTopicLists","useEffect","window","alert","records","getTopics","Stack","justifyContent","alignItems","spacing","minHeight","overflow","mt","xs","fontSize","primary","main","map","i","to"],"sourceRoot":""}