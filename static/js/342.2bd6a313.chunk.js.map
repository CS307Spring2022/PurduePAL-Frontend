{"version":3,"file":"static/js/342.2bd6a313.chunk.js","mappings":"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","sources":["components/Content/ContentLarge.jsx","pages/PostThread/PostThread.jsx"],"sourcesContent":["import { Interactions } from \"../Interactions\";\n\nimport Card from \"@mui/material/Card\";\nimport { useTheme } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { Link } from \"react-router-dom\";\n\n\nexport const ContentLarge = ({ data }) => {\n  const theme = useTheme();\n\n  const dateTimeFormatter = new Intl.DateTimeFormat(\"en\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n\n  return (\n    <Card\n      sx={{\n        padding: \"10px\",\n        width: \"98vw\",\n        maxWidth: { sm: 500, md: 600, lg: 900, xl: 1200 },\n        maxHeight: \"150vh\",\n        borderRadius: \"15px\",\n        backgroundColor: \"#121212\",\n      }}\n    >\n      <Link to=\"/home\" style={{textDecoration: \"none\", color: \"inherit\"}}>\n        <CardHeader\n          avatar={\n            <Avatar\n              sx={{ bgcolor: theme.palette.primary.main }}\n              aria-label={data.user.firstname + \" \" + data.user.lastName}\n            ></Avatar>\n          }\n          action={\n            <>\n              <Typography\n                variant=\"body1\"\n                fontSize={15}\n                component={\"p\"}\n                color={\"#fff\"}\n              >\n                {data.topic}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                fontSize={12}\n                component={\"p\"}\n                color={\"#c4c4c4\"}\n              >\n                {dateTimeFormatter.format(new Date(data.timestamp))}\n              </Typography>\n            </>\n          }\n          title={data.user.firstName + \" \" + data.user.lastName}\n        subheader={`@${data.user.username}`}\n        />\n      </Link>\n      {data.img ? <CardMedia component=\"img\" image={data.img} /> : null}\n      <CardContent>\n        <Typography variant=\"body1\" sx={{fontWeight: \"bold\", fontSize: 32}} color=\"text.secondary\">\n          {data.content}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Interactions up={data.likeCount == null ? 0 : data.likeCount}\n          down={data.dislikeCount == null ? 0 : data.dislikeCount}\n          uuid={data._id}\n          initialReaction={data.reactionType}\n          isSaved={data.isSaved}/>\n      </CardActions>\n    </Card>\n  );\n};\n","import { useTheme } from \"@mui/material/styles\";\nimport { Stack, Typography } from \"@mui/material\";\nimport { ContentLarge} from \"../../components/Content/ContentLarge\";\nimport { Content } from \"../../components/Content/Content\";\nimport { useState, useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { Navigate, useSearchParams } from \"react-router-dom\";\nimport GlobalState from '../../contexts/GlobalStates'\n\n\n\nconst PostThread = () => {\n  const theme = useTheme();\n  const [isSignedIn] = useContext(GlobalState);\n  const [searchParams] = useSearchParams();\n\n  const [parentPost, setParentPost] = useState({});\n  const [comments, setComments] = useState([])\n\n  useEffect(() => {\n    async function getComments() {\n      // console.log(\"hit\")\n      const postThreadRecipient = {\n        \"email\": localStorage.getItem(\"email\"),\n        \"postId\": searchParams.get(\"postId\")\n      }\n      const response = await fetch(`http://localhost:5000/postThread`,{\n        method: \"POST\",\n        body: JSON.stringify(postThreadRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        const message = `An error oc`;\n        // window.alert(message);\n        console.log(response)\n        return;\n      }\n\n      const records = await response.json();\n      console.log(records)\n\n      setParentPost(records[\"parentPost\"]);\n      setComments(records[\"comments\"])\n    }\n\n    const postTimer = setInterval(() => {\n      getComments();\n    }, 650);\n    return () => clearInterval(postTimer);\n  }, [comments.length]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\"/>;\n  }  \n\n  console.log(searchParams.get('postId'))\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      // height={\"100vh\"}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      {Object.keys(parentPost).length == 0 ? null : <ContentLarge key={0} data={parentPost}/>}\n      {comments.map((data, index) => {\n        return <Content key={index+1} data={data} />;\n      })}\n      <Typography variant=\"p\" sx={{ fontSize: \"30px\" }} color=\"primary\">\n        End of Posts!\n      </Typography>\n      <div>\n        <svg width={100} height={50}>\n          <rect\n            width=\"100%\"\n            height={50}\n            fill={theme.palette.background.default}\n          ></rect>\n        </svg>\n      </div>\n    </Stack>\n  );\n};\n\nexport default PostThread;"],"names":["ContentLarge","data","theme","useTheme","dateTimeFormatter","Intl","DateTimeFormat","year","month","day","hour","minute","Card","sx","padding","width","maxWidth","sm","md","lg","xl","maxHeight","borderRadius","backgroundColor","to","style","textDecoration","color","CardHeader","avatar","Avatar","bgcolor","palette","primary","main","user","firstname","lastName","action","Typography","variant","fontSize","component","topic","format","Date","timestamp","title","firstName","subheader","username","img","CardMedia","image","CardContent","fontWeight","content","CardActions","Interactions","up","likeCount","down","dislikeCount","uuid","_id","initialReaction","reactionType","isSaved","useContext","GlobalState","isSignedIn","useSearchParams","searchParams","useState","parentPost","setParentPost","comments","setComments","useEffect","postThreadRecipient","localStorage","getItem","get","fetch","method","body","JSON","stringify","headers","response","ok","console","log","json","records","postTimer","setInterval","getComments","clearInterval","length","Stack","justifyContent","alignItems","spacing","minHeight","overflow","mt","marginLeft","xs","Object","keys","map","index","Content","height","fill","background","default"],"sourceRoot":""}