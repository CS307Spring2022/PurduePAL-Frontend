{"version":3,"file":"static/js/454.b92fa592.chunk.js","mappings":"gSAUMA,GAAiBC,EAAAA,EAAAA,OAAK,kBAAM,yDA0GlC,EAxGgB,WACd,OAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,GAAP,eACA,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAkDA,OAhDAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACQC,EAAcC,aAAaC,QAAQ,SACnCC,EAAaF,aAAaC,QAAQ,YAClCE,EAAcR,EAAaS,IAAI,QAErCC,QAAQC,IAAIH,GAENI,EAAW,CACfR,YAAaA,EACbG,WAAYA,EACZC,YAAaA,GAVjB,SAayBK,MAAM,gCAAiC,CAC5DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAjBtB,WAaQC,EAbR,QAqBgBC,GArBhB,wBAwBIV,QAAQC,IAAIQ,GAxBhB,4CA4BqBA,EAASE,OA5B9B,WA4BQC,EA5BR,OA6BEZ,QAAQC,IAAIW,GAEK,wBAAbA,EAAKC,IA/BX,wBAgCIzB,GAAa,GACbF,GAAiB,GAjCrB,2BAqCEA,GAAiB,GACjBE,GAAa,GAEbY,QAAQC,IAAIW,GACZpB,EAAeoB,GAzCjB,6CADc,uBAAC,WAAD,wBA6CdE,KACC,CAACxB,IAECP,GAKH,UAACgC,EAAA,GAAD,CACEC,GAAI,CAAEC,UAAW,SAAUC,gBAAiB,SAC5CC,GAAI,CAAEC,GAAI,EAAGC,GAAI,QAASC,GAAI,QAASC,GAAI,SAC3CC,SAAS,QACTC,UAAW,QACXC,WAAS,EALX,WAOE,SAACX,EAAA,GAAD,CACEY,eAAe,SACfC,QAAU3C,EAAyB,QAAT,OAC1BoC,GAAI,EACJL,GAAI,CAAEE,gBAAiB,SACvBW,MAAI,EALN,SAOG5C,EACCE,GACE,SAAC2C,EAAA,EAAD,CAAYC,UAAU,KAAKC,MAAM,UAAjC,kCAIA,SAACrD,EAAD,CAAgBiC,KAAMrB,KAGxB,SAAC0C,EAAA,EAAD,CACEjB,GAAI,CACFkB,UAAW,MACXC,WAAY,CAAEf,GAAI,MAAOC,GAAI,OAAQC,GAAI,QAASC,GAAI,eAK9D,SAACR,EAAA,GAAD,CACEM,GAAI,EACJQ,MAAI,EACJH,WAAS,EACTC,eAAgB,SAChBS,WAAY,SALd,UAOE,SAACC,EAAA,EAAD,8BA1CG,SAAC,KAAD,CAAUC,GAAG","sources":["pages/Profile/Profile.jsx"],"sourcesContent":["import { Grid, Button, CircularProgress, Typography } from \"@mui/material\";\nimport { lazy } from \"react\";\n// import { ProfileDetails } from \"./ProfileDetails\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { Navigate, useSearchParams } from \"react-router-dom\";\n\nimport GlobalState from \"../../contexts/GlobalStates\";\n\nimport \"./loader.css\";\n\nconst ProfileDetails = lazy(() => import(\"./ProfileDetails\"));\n\nconst Profile = () => {\n  const [isSignedIn] = useContext(GlobalState);\n  const [profileLoaded, setProfileLoaded] = useState(false);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [searchParams] = useSearchParams();\n  const [profileData, setProfileData] = useState([]);\n\n  useEffect(() => {\n    async function getProfile() {\n      const loggedEmail = localStorage.getItem(\"email\");\n      const loggedUser = localStorage.getItem(\"username\");\n      const profileUser = searchParams.get(\"user\");\n\n      console.log(profileUser);\n\n      const userBody = {\n        loggedEmail: loggedEmail,\n        loggedUser: loggedUser,\n        profileUser: profileUser,\n      };\n\n      const response = await fetch(`http://localhost:5000/getUser`, {\n        method: \"POST\",\n        body: JSON.stringify(userBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        // const message = `An error oc`;\n        // window.alert(message);\n        console.log(response);\n        return;\n      }\n\n      const data = await response.json();\n      console.log(data);\n\n      if (data.msg === \"Profile is Private!\") {\n        setIsPrivate(true);\n        setProfileLoaded(true);\n        return;\n      }\n\n      setProfileLoaded(true);\n      setIsPrivate(false);\n\n      console.log(data);\n      setProfileData(data);\n    }\n\n    getProfile();\n  }, [searchParams]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Grid\n      sx={{ overflowX: \"hidden\", backgroundColor: \"black\" }}\n      ml={{ xs: 0, sm: \"110px\", md: \"240px\", lg: \"240px\" }}\n      maxWidth=\"100vw\"\n      minHeight={\"100vh\"}\n      container\n    >\n      <Grid\n        justifyContent=\"center\"\n        display={!profileLoaded ? \"flex\" : \"block\"}\n        sm={8}\n        sx={{ backgroundColor: \"black\" }}\n        item\n      >\n        {profileLoaded ? (\n          isPrivate ? (\n            <Typography component=\"h1\" color=\"primary\">\n              Profile is Private!\n            </Typography>\n          ) : (\n            <ProfileDetails data={profileData} />\n          )\n        ) : (\n          <CircularProgress\n            sx={{\n              marginTop: \"40%\",\n              marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" },\n            }}\n          />\n        )}\n      </Grid>\n      <Grid\n        sm={4}\n        item\n        container\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n      >\n        <Button>Right Nav</Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Profile;\n"],"names":["ProfileDetails","lazy","useContext","GlobalState","isSignedIn","useState","profileLoaded","setProfileLoaded","isPrivate","setIsPrivate","useSearchParams","searchParams","profileData","setProfileData","useEffect","loggedEmail","localStorage","getItem","loggedUser","profileUser","get","console","log","userBody","fetch","method","body","JSON","stringify","headers","response","ok","json","data","msg","getProfile","Grid","sx","overflowX","backgroundColor","ml","xs","sm","md","lg","maxWidth","minHeight","container","justifyContent","display","item","Typography","component","color","CircularProgress","marginTop","marginLeft","alignItems","Button","to"],"sourceRoot":""}