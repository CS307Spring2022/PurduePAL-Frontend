{"version":3,"file":"static/js/491.320c8654.chunk.js","mappings":"iPA8EA,UAvEc,WACZ,IAAMA,GAAQC,EAAAA,EAAAA,KACd,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,GAAP,eAEA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQC,EAAgB,CACpB,MAASC,aAAaC,QAAQ,UAFlC,SAIyBC,MAAM,mCAAmC,CAC9DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,sBARtB,WAIQC,EAJR,QAWgBC,GAXhB,oCAcIC,QAAQC,IAAIH,GAdhB,2CAkBwBA,EAASI,OAlBjC,QAkBQC,EAlBR,OAmBEH,QAAQC,IAAIE,GACZhB,EAASgB,GApBX,6CADc,sBAwBd,IAAMC,EAAYC,aAAY,YAxBf,WAAD,wBAyBZC,KACC,KACH,OAAO,kBAAMC,cAAcH,MAC1B,CAAClB,EAAMsB,SAELxB,GAKH,UAAC,IAAD,CACEyB,MAAO,QACPC,eAAgB,SAChBC,WAAY,SACZC,QAAS,EACTC,UAAW,QACXC,SAAU,OACVC,GAAI,EACJC,GAAI,CAAEC,WAAY,CAAEC,GAAI,MAAOC,GAAI,OAAQC,GAAI,QAASC,GAAI,UAR9D,UAUGnC,GAASA,EAAMoC,KAAI,SAACC,EAAMC,GACzB,OAAO,SAAC,IAAD,CAAqBD,KAAMA,EAAME,OAAK,GAAxBD,OAEvB,SAAC,IAAD,CAAYE,QAAQ,IAAIV,GAAI,CAAEW,SAAU,QAAUC,MAAM,UAAxD,4BAIA,0BACE,gBAAKnB,MAAO,IAAKoB,OAAQ,GAAzB,UACE,iBACEpB,MAAM,OACNoB,OAAQ,GACRC,KAAMlD,EAAMmD,QAAQC,WAAWC,kBA1BhC,SAAC,KAAD,CAAUC,GAAG","sources":["pages/Saved/Saved.jsx"],"sourcesContent":["import { Stack, Typography, useTheme } from \"@mui/material\";\nimport { Navigate } from \"react-router-dom\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { Content } from \"../../components/Content/Content\";\n\nimport GlobalState from \"../../contexts/GlobalStates\";\n\nconst Saved = () => {\n  const theme = useTheme();\n  const [isSignedIn] = useContext(GlobalState);\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function getPosts() {\n      const saveRecipient = {\n        \"email\": localStorage.getItem(\"email\")\n      }\n      const response = await fetch(`http://localhost:5000/savedPosts`,{\n        method: \"POST\",\n        body: JSON.stringify(saveRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        const message = `An error oc`;\n        // window.alert(message);\n        console.log(response)\n        return;\n      }\n\n      const records = await response.json();\n      console.log(records)\n      setPosts(records);\n    }\n\n    const postTimer = setInterval(() => {\n      getPosts();\n    }, 650);\n    return () => clearInterval(postTimer);\n  }, [posts.length]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      {posts && posts.map((data, index) => {\n        return <Content key={index} data={data} saved />;\n      })}\n      <Typography variant=\"p\" sx={{ fontSize: \"30px\" }} color=\"primary\">\n        End of Posts!\n      </Typography>\n\n      <div>\n        <svg width={100} height={50}>\n          <rect\n            width=\"100%\"\n            height={50}\n            fill={theme.palette.background.default}\n          ></rect>\n        </svg>\n      </div>\n    </Stack>\n  );\n};\n\nexport default Saved;\n"],"names":["theme","useTheme","useContext","GlobalState","isSignedIn","useState","posts","setPosts","useEffect","saveRecipient","localStorage","getItem","fetch","method","body","JSON","stringify","headers","response","ok","console","log","json","records","postTimer","setInterval","getPosts","clearInterval","length","width","justifyContent","alignItems","spacing","minHeight","overflow","mt","sx","marginLeft","xs","sm","md","lg","map","data","index","saved","variant","fontSize","color","height","fill","palette","background","default","to"],"sourceRoot":""}