{"version":3,"file":"static/js/169.e1b4d571.chunk.js","mappings":"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","sources":["ENV.js","components/FolllowingList.jsx","pages/Profile/ProfileDetails.jsx"],"sourcesContent":["export const url = \"http://localhost:5000\"","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Stack, useTheme } from \"@mui/material\";\nimport { Card, CardHeader, Avatar } from \"@mui/material\";\n\nconst followingList = [\n  { name: \"Bruce Banner\", bio: \"Smash\" },\n  { name: \"Thor\", bio: \"Worthy\" },\n  { name: \"Wong\", bio: \"..\" },\n];\n\nconst topics = [\"Marvel\", \"Twitter\", \"DC\", \"Netflix\", \"Cricket\"];\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  height: \"75%\",\n  bgcolor: \"#000\",\n  border: \"2px solid #ddd\",\n  boxShadow: 24,\n  p: 4,\n  overflowY: \"scroll\",\n};\n\nconst DisplayCard = ({ name, bio }) => {\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar aria-label=\"recipe\"></Avatar>}\n        title={name}\n        subheader={bio}\n      />\n    </Card>\n  );\n};\nconst DisplayTopic = ({ name }) => {\n  return (\n    <Card>\n      <CardHeader title={name} />\n    </Card>\n  );\n};\n\nexport default function FollowingList({ number, property, isTopic }) {\n  const theme = useTheme();\n\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen} disableRipple disableElevation>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"subtitle2\">\n            {number ? number : topics.length}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"#c4c4c4\">\n            {property}\n          </Typography>\n        </Stack>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={1}>\n            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\" color={theme.palette.primary.main}>\n              <strong>{property}</strong>\n            </Typography>\n            {isTopic\n              ? topics.map((d) => {\n                  return <DisplayTopic key={d} name={d} />;\n                })\n              : followingList.map((d, i) => {\n                  return <DisplayCard key={i} name={d.name} bio={d.bio} />;\n                })}\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import {\n  useTheme,\n  useMediaQuery,\n  Grid,\n  Stack,\n  Typography,\n  IconButton,\n  Modal,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport { useEffect, useContext } from \"react\";\nimport GlobalState from \"../../contexts/GlobalStates\";\n\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { url } from \"../../ENV\";\nimport FollowingList from \"../../components/FolllowingList\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography color={\"#fff\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction BasicTabs() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Posts\" {...a11yProps(0)} />\n          <Tab label=\"Interactions\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        Posts\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Interactions\n      </TabPanel>\n    </Box>\n  );\n}\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"secondary.main\",\n  border: \"2px solid #000\",\n  boxShadow: 50,\n  p: 4,\n};\n\nconst ProfileDetails = () => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const widthCalc = `calc(100vw - ${matches ? \"200\" : \"75\"}px)`;\n\n  const [searchParams] = useSearchParams();\n\n  const [match] = useState(\n    searchParams.get(\"user\") === localStorage.getItem(\"username\")\n  );\n\n  const [isSignedIn] = useContext(GlobalState);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n\n    async function onSubmit() {\n      const email = localStorage.getItem(\"email\");\n      const editedPerson = {\n        firstName: firstName,\n        lastName: lastName,\n        bio: bio,\n        email: email,\n      };\n\n      console.log(JSON.stringify(editedPerson));\n\n      await fetch(`${url}/update`, {\n        method: \"POST\",\n        body: JSON.stringify(editedPerson),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n    onSubmit();\n  };\n\n  const [firstName, setFirstName] = useState(\"Dr. Stephen\");\n  const [invalidFirstName, setInvalidFirstName] = useState(false);\n  const [firstNameErrMsg, setFirstNameErrMsg] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"Strange\");\n  const [invalidLastName, setInvalidLastName] = useState(false);\n  const [lastNameErrMsg, setLastNameErrMsg] = useState(\"\");\n\n  const [bio, setBio] = useState(\"MD. Sorcerer Supreme. Avenger.\");\n  const [invalidBio, setInvalidBio] = useState(false);\n  const [bioErrMsg, setBioErrMsg] = useState(\"\");\n\n  useEffect(() => {\n    if (firstName.length > 0 && firstNameErrMsg) {\n      setFirstNameErrMsg(\"\");\n      setInvalidFirstName(false);\n    }\n  }, [firstName, firstNameErrMsg]);\n\n  useEffect(() => {\n    if (lastName.length > 0 && lastNameErrMsg) {\n      setLastNameErrMsg(\"\");\n      setInvalidLastName(false);\n    }\n  }, [lastName, lastNameErrMsg]);\n\n  useEffect(() => {\n    if (bio.length > 0 && bioErrMsg && bio.length < 240) {\n      setBioErrMsg(\"\");\n      setInvalidBio(false);\n    }\n  }, [bio, bioErrMsg]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        width={widthCalc}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        item\n        container\n      >\n        <Grid\n          sm={12}\n          mt={2}\n          item\n          container\n          justifyContent={\"space-around\"}\n          direction={\"row\"}\n          spacing={4}\n        >\n          <Grid sm={2} item>\n            <IconButton color={\"primary\"}>\n              <AccountCircleIcon sx={{ fontSize: \"100px\" }} />\n            </IconButton>\n          </Grid>\n          <Grid sm={7} item>\n            <Stack direction=\"column\">\n              <Typography color={\"#fff\"} variant={\"h4\"}>\n                {`${firstName} ${lastName}`}\n              </Typography>\n              <Typography color={\"#ddd\"} variant={\"subtitle1\"}>\n                @drstrange\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid sm={2} item>\n            {isSignedIn && match ? (\n              <IconButton\n                color={\"primary\"}\n                variant={\"outlined\"}\n                onClick={handleOpen}\n              >\n                <EditIcon />\n              </IconButton>\n            ) : (\n              <Button>Follow</Button>\n            )}\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"modal-modal-title\"\n              aria-describedby=\"modal-modal-description\"\n            >\n              <Box sx={style}>\n                <Typography\n                  color={\"#fff\"}\n                  id=\"modal-modal-title\"\n                  variant=\"h6\"\n                  component=\"h2\"\n                >\n                  Edit Profile Details\n                </Typography>\n\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"FirstName\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidFirstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  helperText={firstNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"Lastname\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidLastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  helperText={lastNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"Bio\"\n                  label=\"Bio\"\n                  name=\"bio\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidBio}\n                  onChange={(e) => setBio(e.target.value)}\n                  helperText={bioErrMsg}\n                />\n                <Button\n                  variant=\"filled\"\n                  color={\"success\"}\n                  onClick={handleClose}\n                >\n                  Submit\n                </Button>\n              </Box>\n            </Modal>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item ml={2.5}>\n        <Typography variant=\"h6\" color=\"#fff\">\n          {`${bio}`}\n        </Typography>\n      </Grid>\n      <Grid item ml={2.5} sm={12}>\n        <Stack direction={\"row\"} spacing={3}>\n          <FollowingList\n            number={\"10M\"}\n            property={\"Followers\"}\n            isTopic={false}\n          />\n\n          <FollowingList number={3} property={\"Following\"} isTopic={false} />\n\n          <FollowingList property={\"Topics\"} isTopic />\n        </Stack>\n      </Grid>\n      <Grid item sm={12}>\n        <BasicTabs />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileDetails;"],"names":["url","followingList","name","bio","topics","style","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","overflowY","DisplayCard","Card","CardHeader","avatar","Avatar","title","subheader","DisplayTopic","FollowingList","number","property","isTopic","theme","useTheme","React","open","setOpen","Button","onClick","disableRipple","disableElevation","Stack","direction","spacing","Typography","variant","length","color","Modal","onClose","Box","sx","id","component","palette","primary","main","map","d","i","TabPanel","props","children","value","index","other","role","hidden","a11yProps","BasicTabs","useState","setValue","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","label","matches","useMediaQuery","breakpoints","up","widthCalc","useSearchParams","searchParams","get","localStorage","getItem","match","useContext","GlobalState","isSignedIn","handleClose","email","editedPerson","firstName","lastName","console","log","JSON","stringify","fetch","method","body","headers","onSubmit","setFirstName","invalidFirstName","setInvalidFirstName","firstNameErrMsg","setFirstNameErrMsg","setLastName","invalidLastName","setInvalidLastName","lastNameErrMsg","setLastNameErrMsg","setBio","invalidBio","setInvalidBio","bioErrMsg","setBioErrMsg","useEffect","Grid","container","justifyContent","alignItems","item","sm","mt","IconButton","AccountCircle","fontSize","Edit","TextField","margin","required","fullWidth","autoComplete","autoFocus","error","e","target","helperText","ml"],"sourceRoot":""}