{"version":3,"file":"static/js/342.2c0fa856.chunk.js","mappings":"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","sources":["components/Content/ContentLarge.jsx","pages/PostThread/PostThread.jsx"],"sourcesContent":["import { Interactions } from \"../Interactions\";\n\nimport { Button } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport { useTheme } from \"@mui/material\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { Link } from \"react-router-dom\";\n\n\nexport const ContentLarge = ({ data }) => {\n  const theme = useTheme();\n\n  const isURL = (str) => {\n    let url;\n\n    try {\n      url = new URL(str);\n    } catch (_) {\n      return false;\n    }\n\n    return true;\n  };\n  \n  const dateTimeFormatter = new Intl.DateTimeFormat(\"en\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n\n  return (\n    <Card\n      sx={{\n        padding: \"10px\",\n        width: \"98vw\",\n        maxWidth: { sm: 500, md: 600, lg: 900, xl: 1200 },\n        maxHeight: \"150vh\",\n        borderRadius: \"15px\",\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#121212\" : \"#CFB991\",\n      }}\n    >\n      <CardHeader\n        avatar={\n          <Link to={\"/profile?user=\" + data.user.username}>\n            <Avatar\n              sx={{ bgcolor: theme.palette.primary.main }}\n              aria-label={data.user.firstname + \" \" + data.user.lastName}\n            ></Avatar>\n          </Link>\n        }\n        action={\n          <>\n            <Typography\n              variant=\"body1\"\n              fontSize={15}\n              component={\"p\"}\n              color={theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"}\n            >\n              {data.topic}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              fontSize={12}\n              component={\"p\"}\n              color={theme.palette.mode === \"dark\" ? \"#c4c4c4\" : \"#555960\"}\n            >\n              {dateTimeFormatter.format(new Date(data.timestamp))}\n            </Typography>\n          </>\n        }\n        title={data.user.firstName + \" \" + data.user.lastName}\n      subheader={`@${data.user.username}`}\n      />\n      {data.parentID !== null ? (\n        <Button\n          color=\"primary\"\n          sx = {{\n            textTransform: \"none\",\n          }}\n          href = {\"/purduepal-fe/postThread?postId=\" + data.parentID}\n        >\n          Replying to @{data.parentUser}\n        </Button>\n      ) : null}\n      {data.img ? <CardMedia component=\"img\" image={data.img} /> : null}\n      <CardContent>\n        <Typography variant=\"body1\" sx={{fontWeight: \"bold\", fontSize: 32}} color=\"text.secondary\">\n          {isURL(data.content) ? (\n              <a href={data.content}>{data.content}</a>\n            ) : (\n              data.content\n          )}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Interactions up={data.likeCount == null ? 0 : data.likeCount}\n          down={data.dislikeCount == null ? 0 : data.dislikeCount}\n          uuid={data._id}\n          initialReaction={data.reactionType}\n          isSaved={data.isSaved}/>\n      </CardActions>\n    </Card>\n  );\n};\n","import { useTheme } from \"@mui/material/styles\";\nimport { Stack, Typography } from \"@mui/material\";\nimport { ContentLarge} from \"../../components/Content/ContentLarge\";\nimport { Content } from \"../../components/Content/Content\";\nimport { useState, useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { Navigate, useSearchParams } from \"react-router-dom\";\nimport GlobalState from '../../contexts/GlobalStates'\n\n\n\nconst PostThread = () => {\n  const theme = useTheme();\n  const {isSignedIn, setIsSignedIn, userTheme, setUserTheme} = useContext(GlobalState);\n  const [searchParams] = useSearchParams();\n\n  const [parentPost, setParentPost] = useState({});\n  const [comments, setComments] = useState([])\n\n  useEffect(() => {\n    async function getComments() {\n      // console.log(\"hit\")\n      const postThreadRecipient = {\n        \"email\": localStorage.getItem(\"email\"),\n        \"postId\": searchParams.get(\"postId\")\n      }\n      const response = await fetch(`http://localhost:5000/postThread`,{\n        method: \"POST\",\n        body: JSON.stringify(postThreadRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        const message = `An error oc`;\n        // window.alert(message);\n        console.log(response)\n        return;\n      }\n\n      const records = await response.json();\n      console.log(records)\n\n      setParentPost(records[\"parentPost\"]);\n      setComments(records[\"comments\"])\n    }\n\n    const postTimer = setInterval(() => {\n      getComments();\n    }, 650);\n    return () => clearInterval(postTimer);\n  }, [comments.length]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\"/>;\n  }  \n\n  console.log(searchParams.get('postId'))\n\n  localStorage.setItem(\"currentTopic\",parentPost.topic)\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      // height={\"100vh\"}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      {Object.keys(parentPost).length === 0 ? null : <ContentLarge key={0} data={parentPost}/>}\n      {comments.map((data, index) => {\n        return <Content key={index+1} data={data} />;\n      })}\n      <Typography variant=\"p\" sx={{ fontSize: \"30px\" }} color=\"primary\">\n        End of Comments!\n      </Typography>\n      <div>\n        <svg width={100} height={50}>\n          <rect\n            width=\"100%\"\n            height={50}\n            fill={theme.palette.background.default}\n          ></rect>\n        </svg>\n      </div>\n    </Stack>\n  );\n};\n\nexport default PostThread;"],"names":["ContentLarge","data","theme","useTheme","dateTimeFormatter","Intl","DateTimeFormat","year","month","day","hour","minute","Card","sx","padding","width","maxWidth","sm","md","lg","xl","maxHeight","borderRadius","backgroundColor","palette","mode","CardHeader","avatar","to","user","username","Avatar","bgcolor","primary","main","firstname","lastName","action","Typography","variant","fontSize","component","color","topic","format","Date","timestamp","title","firstName","subheader","parentID","Button","textTransform","href","parentUser","img","CardMedia","image","CardContent","fontWeight","str","URL","_","isURL","content","CardActions","Interactions","up","likeCount","down","dislikeCount","uuid","_id","initialReaction","reactionType","isSaved","useContext","GlobalState","isSignedIn","setIsSignedIn","userTheme","setUserTheme","useSearchParams","searchParams","useState","parentPost","setParentPost","comments","setComments","useEffect","postThreadRecipient","localStorage","getItem","get","fetch","method","body","JSON","stringify","headers","response","ok","console","log","json","records","postTimer","setInterval","getComments","clearInterval","length","setItem","Stack","justifyContent","alignItems","spacing","minHeight","overflow","mt","marginLeft","xs","Object","keys","map","index","Content","height","fill","background","default"],"sourceRoot":""}