{"version":3,"file":"static/js/544.cfcf402c.chunk.js","mappings":"iPAyFA,UAlFa,WACX,IAAMA,GAAQC,EAAAA,EAAAA,KACd,GAA6DC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjEC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,cAEnB,GAFA,EAAkCC,UAAlC,EAA6CC,cAEnBC,EAAAA,EAAAA,UAAS,KAAnC,eAAOC,EAAP,KAAcC,EAAd,KA2CA,OAzCAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,mGACQC,EAAoB,CACxBC,MAAOC,aAAaC,QAAQ,UAFhC,SAIyBC,MAAM,iCAAkC,CAC7DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,sBARtB,cAIQC,EAJR,gBAYwBA,EAASC,OAZjC,UAYQC,EAZR,OAc0B,MAApBF,EAASG,OAdf,qCAiBQ,WAAYD,EAAQ,KACtBV,aAAaY,WAAW,SACxBZ,aAAaY,WAAW,YACxBrB,GAAc,IApBpB,2BA0BE,IADIsB,EAAe,GACVC,EAAE,EAAGA,EAAIJ,EAAQK,OAAQD,IACJ,OAAxBJ,EAAQI,GAAGE,UACbH,EAAaI,KAAKP,EAAQI,IAG9BlB,EAASiB,EAAaK,WA/BxB,6CADc,sBAmCd,IAAMC,EAAYC,aAAY,YAnCf,WAAD,wBAoCZC,KACC,KACH,OAAO,kBAAMC,cAAcH,MAC1B,CAACxB,EAAMoB,SAELzB,GAKH,UAAC,IAAD,CACEiC,MAAO,QACPC,eAAgB,SAChBC,WAAY,SACZC,QAAS,EACTC,UAAW,QACXC,SAAU,OACVC,GAAI,EACJC,GAAI,CAAEC,WAAY,CAAEC,GAAI,MAAOC,GAAI,OAAQC,GAAI,QAASC,GAAI,UAR9D,UAUGxC,EAAMyC,KAAI,SAACC,EAAMC,GAChB,OAAO,SAAC,IAAD,CAAqBD,KAAMA,GAAbC,OAEvB,SAAC,IAAD,CAAYC,QAAQ,IAAIT,GAAI,CAAEU,SAAU,QAAUC,MAAM,UAAxD,4BAIA,0BACE,gBAAKlB,MAAO,IAAKmB,OAAQ,GAAzB,UACE,iBACEnB,MAAM,OACNmB,OAAQ,GACRC,KAAMzD,EAAM0D,QAAQC,WAAWC,kBA1BhC,SAAC,KAAD,CAAUC,GAAG","sources":["pages/Home/Home.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material/styles\";\nimport { Stack, Typography } from \"@mui/material\";\nimport { Content } from \"../../components/Content/Content\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport GlobalState from \"../../contexts/GlobalStates\";\n\nconst Home = () => {\n  const theme = useTheme();\n  const {isSignedIn, setIsSignedIn, userTheme, setUserTheme} = useContext(GlobalState);\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function getPosts() {\n      const timelineRecipient = {\n        email: localStorage.getItem(\"email\"),\n      };\n      const response = await fetch(`http://localhost:5000/timeline`, {\n        method: \"POST\",\n        body: JSON.stringify(timelineRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const records = await response.json();\n\n      if (response.status !== 200) {\n        const message = `An error oc`;\n        // window.alert(message);\n        if (\"logout\" in records[0]) {\n          localStorage.removeItem(\"email\");\n          localStorage.removeItem(\"username\");\n          setIsSignedIn(false);\n        }\n        return;\n      }\n      // console.log(records)\n      let filteredRecs = []\n      for (let i=0; i < records.length; i++) {\n        if (records[i].parentID === null){\n          filteredRecs.push(records[i])\n        }\n      }\n      setPosts(filteredRecs.reverse());\n    }\n\n    const postTimer = setInterval(() => {\n      getPosts();\n    }, 650);\n    return () => clearInterval(postTimer);\n  }, [posts.length]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      {posts.map((data, index) => {\n        return <Content key={index} data={data} />;\n      })}\n      <Typography variant=\"p\" sx={{ fontSize: \"30px\" }} color=\"primary\">\n        End of Posts!\n      </Typography>\n\n      <div>\n        <svg width={100} height={50}>\n          <rect\n            width=\"100%\"\n            height={50}\n            fill={theme.palette.background.default}\n          ></rect>\n        </svg>\n      </div>\n    </Stack>\n  );\n};\n\nexport default Home;\n"],"names":["theme","useTheme","useContext","GlobalState","isSignedIn","setIsSignedIn","userTheme","setUserTheme","useState","posts","setPosts","useEffect","timelineRecipient","email","localStorage","getItem","fetch","method","body","JSON","stringify","headers","response","json","records","status","removeItem","filteredRecs","i","length","parentID","push","reverse","postTimer","setInterval","getPosts","clearInterval","width","justifyContent","alignItems","spacing","minHeight","overflow","mt","sx","marginLeft","xs","sm","md","lg","map","data","index","variant","fontSize","color","height","fill","palette","background","default","to"],"sourceRoot":""}