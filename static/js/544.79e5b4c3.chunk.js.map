{"version":3,"file":"static/js/544.79e5b4c3.chunk.js","mappings":"iPA0JA,UAvEa,WACX,IAAMA,GAAQC,EAAAA,EAAAA,KACd,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,GAAP,eAEA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQC,EAAoB,CACxB,MAASC,aAAaC,QAAQ,UAFlC,SAIyBC,MAAM,iCAAiC,CAC5DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,sBARtB,WAIQC,EAJR,QAWgBC,GAXhB,oCAcIC,QAAQC,IAAIH,GAdhB,2CAkBwBA,EAASI,OAlBjC,QAkBQC,EAlBR,OAoBEhB,EAASgB,GApBX,6CADc,sBAwBd,IAAMC,EAAYC,aAAY,YAxBf,WAAD,wBAyBZC,KACC,KACH,OAAO,kBAAMC,cAAcH,MAC1B,CAAClB,EAAMsB,SAELxB,GAKH,UAAC,IAAD,CACEyB,MAAO,QACPC,eAAgB,SAChBC,WAAY,SACZC,QAAS,EACTC,UAAW,QACXC,SAAU,OACVC,GAAI,EACJC,GAAI,CAAEC,WAAY,CAAEC,GAAI,MAAOC,GAAI,OAAQC,GAAI,QAASC,GAAI,UAR9D,UAUGnC,EAAMoC,KAAI,SAACC,EAAMC,GAChB,OAAO,SAAC,IAAD,CAAqBD,KAAMA,GAAbC,OAEvB,SAAC,IAAD,CAAYC,QAAQ,IAAIT,GAAI,CAAEU,SAAU,QAAUC,MAAM,UAAxD,4BAIA,0BACE,gBAAKlB,MAAO,IAAKmB,OAAQ,GAAzB,UACE,iBACEnB,MAAM,OACNmB,OAAQ,GACRC,KAAMjD,EAAMkD,QAAQC,WAAWC,kBA1BhC,SAAC,KAAD,CAAUC,GAAG","sources":["pages/Home/Home.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material/styles\";\nimport { Stack, Typography } from \"@mui/material\";\nimport { Content } from \"../../components/Content/Content\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport GlobalState from \"../../contexts/GlobalStates\";\n\n// const sampleData = [\n//   {\n//     uuid: \"1aklsdf8asdfhj\",\n//     name: \"Dr. Stephen Strange\",\n//     username: \"drstrange\",\n//     date: \"10/20/16\",\n//     topic: \"Marvel\",\n//     content:\n//       \"It's not Mr. Strange, not Master Strange. It's Doctor Strange! When I became a doctor, I swore to do no harm.\",\n//     img: null,\n//     up: 14000605,\n//     down: 0,\n//     parentId: \"\",\n//   },\n//   {\n//     uuid: \"0756sd8asdsdfhj\",\n//     name: \"Tony Stark\",\n//     username: \"ironman\",\n//     date: \"05/02/08\",\n//     topic: \"Marvel\",\n//     content: \"I. am. IronMan.\",\n//     img: null,\n//     up: 3000,\n//     down: 0,\n//     parentId: \"\",\n//   },\n//   {\n//     uuid: \"agg6jgsgdsbsd2gj\",\n//     name: \"Steve Rogers\",\n//     username: \"captainamerica\",\n//     date: \"07/19/11\",\n//     topic: \"Marvel\",\n//     content: \"Avengers... Assemble\",\n//     img: null,\n//     up: 75,\n//     down: 0,\n//     parentId: \"\",\n//   },\n//   {\n//     uuid: \"6zbkp4s4a43sghgeha\",\n//     name: \"Thor\",\n//     username: \"godofthunder\",\n//     date: \"11/11/11\",\n//     topic: \"Marvel\",\n//     content: \"Stormbreaker\",\n//     img: \"https://i0.wp.com/thenewsfetcher.com/wp-content/uploads/2020/01/45dc07a7fec3414781000b10577e539e.jpeg\",\n//     up: 1000,\n//     down: 0,\n//     parentId: \"\",\n//   },\n//   {\n//     uuid: \"b04uwqual3s2f0j\",\n//     name: \"Hulk\",\n//     username: \"greenguy\",\n//     date: \"07/19/11\",\n//     topic: \"Marvel\",\n//     content: \"Strongest Avenger\",\n//     img: null,\n//     up: 80,\n//     down: 0,\n//     parentId: \"\",\n//   },\n//   {\n//     uuid: \"erxok768yi730qpfsda\",\n//     name: \"Jim\",\n//     username: \"jimmy\",\n//     date: \"07/11/12\",\n//     topic: \"Food\",\n//     content: \"Some Paella\",\n//     img: \"https://mui.com/static/images/cards/paella.jpg\",\n//     up: 800,\n//     down: 0,\n//     parentId: \"\",\n//   },\n// ];\n\nconst Home = () => {\n  const theme = useTheme();\n  const [isSignedIn] = useContext(GlobalState);\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    async function getPosts() {\n      const timelineRecipient = {\n        \"email\": localStorage.getItem(\"email\")\n      }\n      const response = await fetch(`http://localhost:5000/timeline`,{\n        method: \"POST\",\n        body: JSON.stringify(timelineRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        const message = `An error oc`;\n        // window.alert(message);\n        console.log(response)\n        return;\n      }\n\n      const records = await response.json();\n      // console.log(records)\n      setPosts(records);\n    }\n\n    const postTimer = setInterval(() => {\n      getPosts();\n    }, 650);\n    return () => clearInterval(postTimer);\n  }, [posts.length]);\n\n  if (!isSignedIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <Stack\n      width={\"100vw\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      spacing={2}\n      minHeight={\"100vh\"}\n      overflow={\"auto\"}\n      mt={2}\n      sx={{ marginLeft: { xs: \"0px\", sm: \"75px\", md: \"200px\", lg: \"200px\" } }}\n    >\n      {posts.map((data, index) => {\n        return <Content key={index} data={data} />;\n      })}\n      <Typography variant=\"p\" sx={{ fontSize: \"30px\" }} color=\"primary\">\n        End of Posts!\n      </Typography>\n\n      <div>\n        <svg width={100} height={50}>\n          <rect\n            width=\"100%\"\n            height={50}\n            fill={theme.palette.background.default}\n          ></rect>\n        </svg>\n      </div>\n    </Stack>\n  );\n};\n\nexport default Home;\n"],"names":["theme","useTheme","useContext","GlobalState","isSignedIn","useState","posts","setPosts","useEffect","timelineRecipient","localStorage","getItem","fetch","method","body","JSON","stringify","headers","response","ok","console","log","json","records","postTimer","setInterval","getPosts","clearInterval","length","width","justifyContent","alignItems","spacing","minHeight","overflow","mt","sx","marginLeft","xs","sm","md","lg","map","data","index","variant","fontSize","color","height","fill","palette","background","default","to"],"sourceRoot":""}