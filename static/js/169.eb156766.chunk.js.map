{"version":3,"file":"static/js/169.eb156766.chunk.js","mappings":"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","sources":["components/FolllowingList.jsx","pages/Profile/ProfileDetails.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Stack, useTheme } from \"@mui/material\";\nimport { Card, CardHeader, Avatar } from \"@mui/material\";\nimport { CardActions } from \"@mui/material\";\n\nconst followingList = [\n  { name: \"Bruce Banner\", bio: \"Smash\" },\n  { name: \"Thor\", bio: \"Worthy\" },\n  { name: \"Wong\", bio: \"..\" },\n];\n\nconst topics = [\"Marvel\", \"Twitter\", \"DC\", \"Netflix\", \"Cricket\"];\n\nconst handleUnfollow = (username) => {\n  console.log(username);\n  async function updateUnfollow() {\n    const followRecipient = {\n      follower: localStorage.getItem(\"email\"),\n      username: username,\n    };\n\n    await fetch(`http://localhost:5000/unfollowUser`, {\n      method: \"POST\",\n      body: JSON.stringify(followRecipient),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n  updateUnfollow();\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  height: \"75%\",\n  bgcolor: \"#000\",\n  border: \"2px solid #ddd\",\n  boxShadow: 24,\n  p: 4,\n  overflowY: \"scroll\",\n};\n\nconst DisplayCard = ({ name, username }) => {\n  return (\n    <Card>\n      <CardHeader avatar={<Avatar aria-label=\"recipe\"></Avatar>} title={name} />\n      <CardActions>\n        <Button\n          onClick={() => {\n            handleUnfollow(username);\n          }}\n        >\n          Unfollow\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\nconst DisplayTopic = ({ name }) => {\n  return (\n    <Card>\n      <CardHeader title={name} />\n    </Card>\n  );\n};\n\nexport default function FollowingList({ number, property, data, isTopic }) {\n  console.log(data);\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button onClick={handleOpen} disableRipple disableElevation>\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"subtitle2\">\n            {number ? number : data.length}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"#c4c4c4\">\n            {property}\n          </Typography>\n        </Stack>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={1}>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h4\"\n              component=\"h2\"\n              color={theme.palette.primary.main}\n            >\n              <strong>{property}</strong>\n            </Typography>\n            {isTopic\n              ? data.map((d) => {\n                  return <DisplayTopic key={d} name={d} />;\n                })\n              : data.map((d, i) => {\n                  return (\n                    <DisplayCard key={i} name={d.name} username={d.username} />\n                  );\n                })}\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import {\n  useTheme,\n  useMediaQuery,\n  Grid,\n  Stack,\n  Typography,\n  IconButton,\n  Modal,\n  TextField,\n  Button,\n  styled,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport {\n  NotificationsOutlined as FollowEmptyIcon,\n  NotificationsActiveRounded as FollowFillIcon,\n} from \"@mui/icons-material\";\nimport { useEffect, useContext } from \"react\";\nimport GlobalState from \"../../contexts/GlobalStates\";\n\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { url } from \"../../ENV\";\nimport FollowingList from \"../../components/FolllowingList\";\n\n// global.Buffer = global.Buffer || require(\"buffer\").Buffer;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography color={\"#fff\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction BasicTabs() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Posts\" {...a11yProps(0)} />\n          <Tab label=\"Interactions\" {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        Posts\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Interactions\n      </TabPanel>\n    </Box>\n  );\n}\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"secondary.main\",\n  border: \"2px solid #000\",\n  boxShadow: 50,\n  p: 4,\n};\n\nconst ProfileDetails = ({ data }) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const widthCalc = `calc(100vw - ${matches ? \"200\" : \"75\"}px)`;\n\n  const [searchParams] = useSearchParams();\n\n  // const myEmail = localStorage.getItem(\"email\")\n\n  const [match] = useState(\n    searchParams.get(\"user\") === localStorage.getItem(\"username\")\n  );\n\n  const [isSignedIn] = useContext(GlobalState);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n\n    async function onSubmit() {\n      const email = localStorage.getItem(\"email\");\n      const editedPerson = {\n        firstName: changeFirstName,\n        lastName: changeLastName,\n        bio: changeBio,\n        email: email,\n      };\n\n      console.log(JSON.stringify(editedPerson));\n\n      await fetch(`${url}/updateUserInfo`, {\n        method: \"POST\",\n        body: JSON.stringify(editedPerson),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n    onSubmit();\n  };\n\n  const [changeFirstName, setChangeFirstName] = useState(data.firstName);\n  const [invalidChangeFirstName, setInvalidChangeFirstName] = useState(false);\n  const [changeFirstNameErrMsg, setChangeFirstNameErrMsg] = useState(\"\");\n\n  const [changeLastName, setChangeLastName] = useState(data.lastName);\n  const [invalidChangeLastName, setInvalidChangeLastName] = useState(false);\n  const [changeLastNameErrMsg, setChangeLastNameErrMsg] = useState(\"\");\n\n  const [changeBio, setChangeBio] = useState(data.bio);\n  const [invalidChangeBio, setInvalidChangeBio] = useState(true);\n  const [changeBioErrMsg, setChangeBioErrMsg] = useState(\"\");\n\n  // const buf = Buffer.from(data.profilePic.split(\"base64,\")[1]).toString(\n  //   \"base64\"\n  // );\n\n  // console.log(buf);\n\n  useEffect(() => {\n    async function onSubmit() {\n      const loggedEmail = localStorage.getItem(\"email\");\n      const loggedUser = localStorage.getItem(\"username\");\n      const profileUser = searchParams.get(\"user\");\n      console.log({\n        loggedEmail: loggedEmail,\n        loggedUser: loggedUser,\n        profileUser: profileUser,\n      });\n      await fetch(`${url}/getUser`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          loggedEmail: loggedEmail,\n          loggedUser: loggedUser,\n          profileUser: profileUser,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n    onSubmit();\n  }, [searchParams]);\n\n  const Input = styled(\"input\")({\n    display: \"none\",\n  });\n\n  const handleFileChange = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append(\"profileImage\", e.target.files[0]);\n    formData.append(\"email\", localStorage.getItem(\"email\"));\n    async function onSubmit() {\n      await fetch(`${url}/addProfileImage`, {\n        method: \"POST\",\n        body: formData,\n      });\n      window.location.reload();\n    }\n    onSubmit();\n    \n  };\n\n  const [changeFollowingUsers, setChangeFollowingUsers] = useState(\n    data.followingUsers\n  );\n\n  const justNames = [];\n  for (let i = 0; i < data.followingUsers.length; i++) {\n    justNames.push(data.followingUsers[i][\"name\"]);\n  }\n\n  const [following, setFollowing] = useState(\n    isSignedIn && match ? 0 : Number(data.loggedFollows) + 1\n  );\n  console.log(following);\n\n  async function updateUserFollow() {\n    const followRecipient = {\n      follower: localStorage.getItem(\"email\"),\n      following: data._id,\n    };\n    console.log(followRecipient);\n    let response;\n    if (following === 1) {\n      response = await fetch(`http://localhost:5000/followUser`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } else if (following === 2) {\n      response = await fetch(`http://localhost:5000/unfollowUser`, {\n        method: \"POST\",\n        body: JSON.stringify(followRecipient),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    }\n\n    if (!response.ok) {\n      // const message = `An error oc`;\n      // window.alert(message);\n      console.log(response);\n      return;\n    }\n\n    const res = await response.json();\n    console.log(res);\n    if (res.message) {\n      response = await fetch(`http://localhost:5000/getFollowers`, {\n        method: \"POST\",\n        body: JSON.stringify({ email: data._id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        // const message = `An error oc`;\n        // window.alert(message);\n        console.log(response);\n        return;\n      }\n\n      const newFollowing = await response.json();\n      console.log(\"New Following:\"+newFollowing);\n      setChangeFollowingUsers(newFollowing.newFollowing);\n    }\n  }\n\n  useEffect(() => {\n    if (changeFirstName.length > 0 && changeFirstNameErrMsg) {\n      setChangeFirstNameErrMsg(\"\");\n      setInvalidChangeFirstName(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeFirstName, changeFirstNameErrMsg]);\n\n  useEffect(() => {\n    if (changeLastName.length > 0 && changeLastNameErrMsg) {\n      setChangeLastNameErrMsg(\"\");\n      setInvalidChangeLastName(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeLastName, changeLastNameErrMsg]);\n\n  useEffect(() => {\n    if (changeBio.length > 0 && changeBio.length < 240) {\n      setChangeBioErrMsg(\"\");\n      setInvalidChangeBio(false);\n    } else {\n      setInvalidChangeBio(true);\n    }\n  }, [changeBio, changeBioErrMsg]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid\n        width={widthCalc}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        item\n        container\n      >\n        <Grid\n          sm={12}\n          mt={2}\n          item\n          container\n          justifyContent={\"space-around\"}\n          direction={\"row\"}\n          spacing={4}\n        >\n          <Grid sm={2} item>\n            <label htmlFor=\"upload-profile-picture\">\n              <Input\n                accept=\"image/png\"\n                id=\"upload-profile-picture\"\n                type=\"file\"\n                onChange={(e) => handleFileChange(e)}\n                disabled={!(isSignedIn && match)}\n              />\n              <IconButton\n                color={\"primary\"}\n                component=\"span\"\n                aria-label=\"upload profile picture\"\n                disabled={!(isSignedIn && match)}\n              >\n                {data.profilePic.length > \"data:image/png;base64,\".length ? (\n                  <img\n                    // src={`data:image/png;base64,${buf}`}\n                    src={data.profilePic}\n                    alt=\"profile pic of user\"\n                    width={100}\n                    height={100}\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ) : (\n                  <AccountCircleIcon sx={{ fontSize: \"100px\" }} />\n                )}\n              </IconButton>\n            </label>\n          </Grid>\n          <Grid sm={7} item>\n            <Stack direction=\"column\">\n              <Typography color={\"#fff\"} variant={\"h4\"}>\n                {`${changeFirstName} ${changeLastName}`}\n              </Typography>\n              <Typography color={\"#ddd\"} variant={\"subtitle1\"}>\n                {`@${data.username}`}\n              </Typography>\n            </Stack>\n          </Grid>\n          <Grid sm={2} item>\n            {isSignedIn && match ? (\n              <IconButton\n                color={\"primary\"}\n                variant={\"outlined\"}\n                onClick={handleOpen}\n              >\n                <EditIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                color=\"primary\"\n                onClick={() => {\n                  updateUserFollow();\n                  setFollowing(following === 1 ? 2 : 1);\n                }}\n              >\n                {following === 2 ? (\n                  <FollowFillIcon color=\"primary\" />\n                ) : (\n                  <FollowEmptyIcon color=\"primary\" />\n                )}\n                {following === 2 ? \"Following\" : \"Follow\"}\n              </IconButton>\n            )}\n            <Modal\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"modal-modal-title\"\n              aria-describedby=\"modal-modal-description\"\n            >\n              <Box sx={style}>\n                <Typography\n                  color={\"#fff\"}\n                  id=\"modal-modal-title\"\n                  variant=\"h6\"\n                  component=\"h2\"\n                >\n                  Edit Profile Details\n                </Typography>\n\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"changeFirstName\"\n                  label=\"First Name\"\n                  name=\"changeFirstName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeFirstName}\n                  onChange={(e) => setChangeFirstName(e.target.value)}\n                  helperText={changeFirstNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"changeLastName\"\n                  label=\"Last Name\"\n                  name=\"changeLastName\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeLastName}\n                  onChange={(e) => setChangeLastName(e.target.value)}\n                  helperText={changeLastNameErrMsg}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"Bio\"\n                  label=\"Bio\"\n                  name=\"bio\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={invalidChangeBio}\n                  onChange={(e) => setChangeBio(e.target.value)}\n                  helperText={changeBioErrMsg}\n                />\n                <Button\n                  variant=\"filled\"\n                  color={\"success\"}\n                  disabled={\n                    invalidChangeBio ||\n                    invalidChangeLastName ||\n                    invalidChangeFirstName\n                  }\n                  onClick={handleClose}\n                >\n                  Submit\n                </Button>\n              </Box>\n            </Modal>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item ml={2.5}>\n        <Typography variant=\"h6\" color=\"#fff\">\n          {`${changeBio}`}\n        </Typography>\n      </Grid>\n      <Grid item ml={2.5} sm={12}>\n        <Stack direction={\"row\"} spacing={3}>\n          <FollowingList\n            property={\"Followers\"}\n            data={changeFollowingUsers}\n            isTopic={false}\n          />\n\n          <FollowingList\n            property={\"Following\"}\n            data={data.usersFollowing}\n            isTopic={false}\n          />\n\n          <FollowingList\n            property={\"Topics\"}\n            data={data.topicsFollowing}\n            isTopic\n          />\n        </Stack>\n      </Grid>\n      <Grid item sm={12}>\n        <BasicTabs />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProfileDetails;\n"],"names":["style","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","overflowY","DisplayCard","name","username","Card","CardHeader","avatar","Avatar","title","CardActions","Button","onClick","followRecipient","follower","localStorage","getItem","fetch","method","body","JSON","stringify","headers","console","log","updateUnfollow","handleUnfollow","DisplayTopic","FollowingList","number","property","data","isTopic","theme","useTheme","React","open","setOpen","disableRipple","disableElevation","Stack","direction","spacing","Typography","variant","length","color","Modal","onClose","Box","sx","id","component","palette","primary","main","map","d","i","TabPanel","props","children","value","index","other","role","hidden","a11yProps","BasicTabs","useState","setValue","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","label","matches","useMediaQuery","breakpoints","up","widthCalc","useSearchParams","searchParams","get","match","useContext","GlobalState","isSignedIn","handleClose","email","editedPerson","firstName","changeFirstName","lastName","changeLastName","bio","changeBio","url","onSubmit","setChangeFirstName","invalidChangeFirstName","setInvalidChangeFirstName","changeFirstNameErrMsg","setChangeFirstNameErrMsg","setChangeLastName","invalidChangeLastName","setInvalidChangeLastName","changeLastNameErrMsg","setChangeLastNameErrMsg","setChangeBio","invalidChangeBio","setInvalidChangeBio","changeBioErrMsg","setChangeBioErrMsg","useEffect","loggedEmail","loggedUser","profileUser","Input","styled","display","followingUsers","changeFollowingUsers","setChangeFollowingUsers","justNames","push","Number","loggedFollows","following","setFollowing","_id","response","ok","json","res","message","newFollowing","Grid","container","justifyContent","alignItems","item","sm","mt","htmlFor","accept","type","e","preventDefault","formData","FormData","window","location","reload","append","target","files","handleFileChange","disabled","IconButton","profilePic","src","alt","borderRadius","AccountCircle","fontSize","Edit","updateUserFollow","TextField","margin","required","fullWidth","autoComplete","autoFocus","error","helperText","ml","usersFollowing","topicsFollowing"],"sourceRoot":""}