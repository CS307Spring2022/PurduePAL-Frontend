[{"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/service-worker.js":"1","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/index.js":"2","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/serviceWorkerRegistration.js":"3","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/App.js":"4","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/reportWebVitals.js":"5","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/VerticalNavbar.jsx":"6","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/themes/Theme.jsx":"7","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Navbar.jsx":"8","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/CreatePost.jsx":"9","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Home/Home.jsx":"10","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Explore/Explore.jsx":"11","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Profile/Profile.jsx":"12","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/ForgotPassword/ForgotPassword.jsx":"13","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/SignIn/SignIn.jsx":"14","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/SignUp/SignUp.jsx":"15","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Notifications/Notifications.jsx":"16","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Settings/Settings.jsx":"17","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Saved/Saved.jsx":"18","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Content/Content.jsx":"19","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Profile/ProfileDetails.jsx":"20","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/ENV.js":"21","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Interactions.jsx":"22","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/FolllowingList.jsx":"23"},{"size":2837,"mtime":1644094177737,"results":"24","hashOfConfig":"25"},{"size":934,"mtime":1648325743253,"results":"26","hashOfConfig":"25"},{"size":5064,"mtime":1644094177737,"results":"27","hashOfConfig":"25"},{"size":2448,"mtime":1648329144839,"results":"28","hashOfConfig":"25"},{"size":364,"mtime":1644094177736,"results":"29","hashOfConfig":"25"},{"size":2712,"mtime":1648326772455,"results":"30","hashOfConfig":"25"},{"size":748,"mtime":1644794305623,"results":"31","hashOfConfig":"25"},{"size":2561,"mtime":1648326777109,"results":"32","hashOfConfig":"25"},{"size":7638,"mtime":1645676017177,"results":"33","hashOfConfig":"25"},{"size":2919,"mtime":1648239965834,"results":"34","hashOfConfig":"25"},{"size":270,"mtime":1645676017178,"results":"35","hashOfConfig":"25"},{"size":490,"mtime":1645676017180,"results":"36","hashOfConfig":"25"},{"size":4478,"mtime":1648327238104,"results":"37","hashOfConfig":"25"},{"size":5829,"mtime":1648327201087,"results":"38","hashOfConfig":"25"},{"size":8993,"mtime":1648326859089,"results":"39","hashOfConfig":"25"},{"size":280,"mtime":1645676017179,"results":"40","hashOfConfig":"25"},{"size":2551,"mtime":1648242951320,"results":"41","hashOfConfig":"25"},{"size":279,"mtime":1645676017180,"results":"42","hashOfConfig":"25"},{"size":1832,"mtime":1648238868908,"results":"43","hashOfConfig":"25"},{"size":8332,"mtime":1648329408122,"results":"44","hashOfConfig":"25"},{"size":42,"mtime":1648240427697,"results":"45","hashOfConfig":"25"},{"size":2421,"mtime":1645676017177,"results":"46","hashOfConfig":"25"},{"size":2665,"mtime":1648332952007,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1tj1l2k",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/service-worker.js",[],["123","124","125","126"],["127","128"],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/index.js",[],[],["129","130"],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/serviceWorkerRegistration.js",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/App.js",["131"],[],"import { React, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Stack,\n  ThemeProvider,\n  createTheme,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport { Home } from \"./pages/Home/Home\";\nimport { VerticalNavbar } from \"./components/VerticalNavbar\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Explore } from \"./pages/Explore/Explore\";\nimport { Profile } from \"./pages/Profile/Profile\";\nimport { SignIn } from \"./pages/SignIn/SignIn\";\nimport { CreatePost } from \"./components/CreatePost\";\nimport { SignUp } from \"./pages/SignUp/SignUp\";\nimport { ForgotPassword } from \"./pages/ForgotPassword/ForgotPassword\";\n\nimport { getDesignTokens } from \"./themes/Theme\";\nimport { Saved } from \"./pages/Saved/Saved\";\nimport { Notications } from \"./pages/Notifications/Notifications\";\nimport { Settings } from \"./pages/Settings/Settings\";\nimport { FollowingList } from \"./components/FolllowingList\";\n\nfunction App() {\n  const theme = createTheme(getDesignTokens(\"dark\"));\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const location = useLocation();\n  const navigation = matches ? <Navbar /> : <VerticalNavbar />;\n\n  console.log(location.pathname);\n\n  const [isSignedIn, setIsSignedIn] = useState(\n    location.pathname !== \"/\" &&\n      location.pathname !== \"/signup\" &&\n      location.pathname !== \"/forgotPassword\"\n  ); //temporary till signin is actually implemented\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Stack\n        direction={\"row\"}\n        sx={{\n          backgroundColor: theme.palette.background.default,\n          maxWidth: \"100vw\",\n        }}\n      >\n        {isSignedIn ? navigation : null}\n        <Routes>\n          <Route path=\"/\" element={<SignIn />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n          <Route path=\"/forgotPassword\" element={<ForgotPassword />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/explore\" element={<Explore />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/saved\" element={<Saved />} />\n          <Route path=\"/notifications\" element={<Notications />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"/following-list\" element={<FollowingList/>} />\n        </Routes>\n        {isSignedIn ? <CreatePost /> : null}\n      </Stack>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",["132","133"],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/reportWebVitals.js",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/VerticalNavbar.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/themes/Theme.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Navbar.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/CreatePost.jsx",["134"],[],"import { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport {\n  Button,\n  Fab,\n  IconButton,\n  Stack,\n  TextField,\n  Autocomplete,\n  createFilterOptions,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = useState(null);\n  const [errorTopic,setErrorTopic] = useState(false)\n  const [errorTopicMessage,setErrorTopicMessage] = useState(\"\")\n\n  useEffect(() => {\n    if (value !== null) {\n      if (value.length <= 0 || value.length > 50) {\n        setErrorTopic(true)\n        setErrorTopicMessage(\"Topic must be between 1-50 characters\")\n      } else {\n        setErrorTopic(false)\n        setErrorTopicMessage(\"\")\n      }\n    }\n  }, [value]);\n\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        console.log(newValue)\n        if (typeof newValue === \"string\") {\n          console.log(newValue,newValue.length)\n          if (newValue.length === 0 || newValue.length > 50) {\n            setErrorTopic(true)\n            setErrorTopicMessage(\"Topic must be 1-50 characters\")\n          } else {\n            setErrorTopic(false)\n            setErrorTopicMessage(\"\")\n            setValue({\n              title: newValue,\n            });\n          }\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          console.log(newValue,newValue.length)\n          if (newValue.inputValue.length === 0 || newValue.inputValue.length > 50) {\n            setErrorTopic(true)\n            setErrorTopicMessage(\"Topic must be 1-50 characters\")\n          } else {\n            setErrorTopic(false)\n            setErrorTopicMessage(\"\")\n            setValue({\n              title: newValue.inputValue,\n            });\n          }\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some(\n          (option) => inputValue === option.title\n        );\n        if (inputValue !== \"\" && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={topicOptions}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      sx={{ width: \"50%\" }}\n      freeSolo\n      renderInput={(params) => <TextField {...params} error={errorTopic} helperText={errorTopicMessage} label=\"Choose Topic\" />}\n    />\n  );\n}\n\nconst topicOptions = [\n  { title: \"Marvel\" },\n  { title: \"DC\" },\n  { title: \"Purdue\" },\n  { title: \"Math\" },\n];\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"#333\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ariaLabel = { \"aria-label\": \"description\" };\n\nexport const CreatePost = () => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fabPosWidth = matches ? \"80px\" : \"16px\";\n  const fabPosHeight = matches ? \"22px\" : \"40px\";\n  const [postText, setPostText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setErrorText(false);\n    setErrorTextMessage(\"\");\n  }\n  const [post, setPost] = useState(false);\n  const handleSubmit = () => {\n    //dummy code to handle creating post\n    setPost(true);\n    setInterval(setPost(true), 1000);\n    setPost(false);\n    console.log(post);\n  };\n\n  const isURL = (str) => {\n    let url;\n  \n    try {\n      url = new URL(str);\n    } catch (_) {\n      return false;  \n    }\n\n    return true;\n  }\n\n  const [paste,setPaste] = useState(false);\n  const [errorText, setErrorText] = useState(false);\n  const [errorTextMessage, setErrorTextMessage] = useState(\"\");\n  const handleTextLength = (text) => {\n    // console.log(isURL(text),text);\n    const urlValid = isURL(text);\n    if (text.length > 280 || text.length <= 0) {\n      console.log(urlValid,text)\n      if (!urlValid && (text.includes(\"http://\") || (text.includes(\"https://\")))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\") \n      } else if (!urlValid) {\n        setErrorText(true);\n        setErrorTextMessage(\"Post Must Contain Between 1-280 characters\")\n      } else {\n        setErrorText(false)\n        setErrorTextMessage(\"\")          \n      }\n    } else {\n      if (!urlValid && (text.includes(\"http://\") || (text.includes(\"https://\")))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\") \n      } else {\n        setErrorText(false)\n        setErrorTextMessage(\"\")\n      }\n    }\n  }\n  return (\n    <div>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        sx={{\n          position: \"fixed\",\n          bottom: fabPosWidth,\n          right: fabPosHeight,\n        }}\n        onClick={handleOpen}\n      >\n        <AddIcon />\n      </Fab>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={2}>\n            <Typography\n              color={\"#eee\"}\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              Create a Post\n            </Typography>\n            <FreeSoloCreateOption />\n            <TextField\n              multiline\n              rows={4}\n              error={errorText}\n              fullWidth\n              placeholder=\"Type something\"\n              inputProps={ariaLabel}\n              helperText={errorTextMessage}\n              onChange={(e) => {\n                if (!paste) {\n                  // console.log(\"changed!! \"+e.target.value)\n                  setPostText(e.target.value);\n                  console.log(\"changed!! \"+postText)\n                  handleTextLength(e.target.value);\n                }\n                setPaste(false);\n              }}\n              onPaste={(e) => {\n                // console.log(\"pasted!! \")\n                setPaste(true);\n                e.clipboardData.items[0].getAsString(text=>{\n                  setPostText(text);\n                  handleTextLength(text);\n                })\n              }}\n            />\n            <Stack direction={\"row\"}>\n              <IconButton color=\"primary\">\n                <AddAPhotoIcon />\n              </IconButton>\n            </Stack>\n            <Button\n              disabled={errorText ? true : false}\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Post\n            </Button>\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Home/Home.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Explore/Explore.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Profile/Profile.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/ForgotPassword/ForgotPassword.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/SignIn/SignIn.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/SignUp/SignUp.jsx",["135"],[],"import { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport PermIdentityOutlinedIcon from '@mui/icons-material/PermIdentityOutlined';\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport { ReactComponent as Logo } from \"./../../icons/logo.svg\";\nimport { ReactComponent as Train } from \"../../icons/trainSmall.svg\";\n\n// import { MostCommonPasswords } from \"../../utils/MostCommonPasswords\";\n\nimport \"./SignUp.css\";\n\nexport const SignUp = () => {\n  const theme = useTheme();\n\n\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [invalidFirstName, setInvalidFirstName] = useState(false);\n  const [firstNameErrMsg, setFirstNameErrMsg] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [invalidLastName, setInvalidLastName] = useState(false);\n  const [lastNameErrMsg, setLastNameErrMsg] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [emailErrMsg, setEmailErrMsg] = useState(\"\");\n\n  const [username, setUsername] = useState(\"\");\n  const [invalidUsername, setInvalidUsername] = useState(false);\n  const [usernameErrMsg, setUsernameErrMsg] = useState(\"\");\n\n  const [pass, setPass] = useState(\"\");\n  const [invalidPass, setInvalidPass] = useState(false);\n  const [passErrMsg, setPassErrMsg] = useState(\"\");\n  // const [isCommonPass, setIsCommonPass] =useState(false);\n\n\n  useEffect(() => {\n    if (\n      email.match(/[\\w\\d]+@([\\w]*.)*purdue\\.edu/) === null &&\n      email.length !== 0\n    ) {\n      setInvalidEmail(true);\n      setEmailErrMsg(\"Input must be a valid Purdue email\");\n    }\n  }, [email]);\n\n  useEffect(() => {\n    if (\n      email.match(/[\\w\\d]+@([\\w]*.)*purdue\\.edu/) !== null &&\n      email.length > 0 &&\n      emailErrMsg\n    ) {\n      setEmailErrMsg(\"\");\n      setInvalidEmail(false);\n    }\n  }, [email, emailErrMsg]);\n\n  useEffect(() => {\n    \n    const uppercaseRegex = /[A-Z]+/;\n    const digitRegex = /\\d+/;\n    const specialCharacterRegex = /[~`!@#$%^&*()_+={}[\\]|\\\\/\\-<,>.?;:\"']+/;\n    const MIN_PASS_LENGTH = 8;\n\n    if (firstName.length > 0 && firstNameErrMsg) {\n      setFirstNameErrMsg(\"\");\n      setInvalidFirstName(false);\n    }\n\n    if (lastName.length > 0 && lastNameErrMsg) {\n      setLastNameErrMsg(\"\");\n      setInvalidLastName(false);\n    }\n\n    if (username.length > 0 && usernameErrMsg) {\n      setUsernameErrMsg(\"\");\n      setInvalidUsername(false);\n    }\n\n    if (pass.length >= MIN_PASS_LENGTH && \n        pass.match(uppercaseRegex) !== null &&\n        pass.match(digitRegex) !== null &&\n        pass.match(specialCharacterRegex) !== null &&\n        passErrMsg) {\n      setPassErrMsg(\"\");\n      setInvalidPass(false);\n    } else if (pass.length > 0) {\n      if (pass.length < MIN_PASS_LENGTH ||\n          pass.match(uppercaseRegex) === null ||\n          pass.match(digitRegex) === null ||\n          pass.match(specialCharacterRegex) === null) {\n        setPassErrMsg(\"Password is too weak: Ensure at least:\\n 1 uppercase letters\\n 2 digits\\n 1 special character\\n 8 characters in total\\n\");\n        setInvalidPass(true);\n      }\n    }\n  }, [firstName, firstNameErrMsg, lastName, lastNameErrMsg,\n      username, usernameErrMsg, pass, passErrMsg]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    let valid = true;\n\n    if (data.get(\"firstName\").length === 0) {\n      setFirstNameErrMsg(\"First Name is Required\");\n      setInvalidFirstName(true);\n      valid = false;\n    }\n\n    if (data.get(\"lastName\").length === 0) {\n      setLastNameErrMsg(\"Last Name is Required\");\n      setInvalidLastName(true);\n      valid = false;\n    }\n\n    if (data.get(\"username\").length === 0) {\n      setUsernameErrMsg(\"Username is Required\");\n      setInvalidUsername(true);\n      valid = false;\n    }\n\n    if (data.get(\"email\").length === 0) {\n      setEmailErrMsg(\"Email is Required\");\n      setInvalidEmail(true);\n      valid = false;\n    }\n    const standardizedPass = data.get(\"password\").toLowerCase();\n    // const isCommon = MostCommonPasswords.has(standardizedPass) || MostCommonPasswords.has(data.get(\"password\"));\n    // console.log(data.get(\"password\"),isCommon);\n    if (data.get(\"password\").length === 0) {\n      setPassErrMsg(\"Password is Required\");\n      setInvalidPass(true);\n      valid = false;\n    }\n\n    if (!valid) {\n      alert(\"Form data Invalid!!\");\n    } else {\n      alert(\"Form data Valid!\");\n    }\n\n  };\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          display: [\"none\", \"block\", \"block\", \"block\", \"block\"],\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: theme.palette.background.default,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          textAlign: \"center\",\n        }}\n      >\n        <Link href=\"/\" underline=\"none\">\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            style={{ marginTop: \"10vh\", textAlign: \"center\" }}\n          >\n            PurduePAL\n          </Typography>\n        </Link>\n        <div className=\"trainContainer\">\n          <Train />\n        </div>\n      </Grid>\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <PermIdentityOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"FirstName\"\n              label=\"First Name\"\n              name=\"firstName\"\n              autoComplete=\"given-name\"\n              autoFocus\n              error={invalidFirstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              helperText={firstNameErrMsg}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"LastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              autoComplete=\"family-name\"\n              error={invalidLastName}\n              onChange={(e) => setLastName(e.target.value)}\n              helperText={lastNameErrMsg}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              error={invalidEmail}\n              onChange={(e) => setEmail(e.target.value)}\n              helperText={emailErrMsg}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              error={invalidUsername}\n              onChange={(e) => setUsername(e.target.value)}\n              helperText={usernameErrMsg}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              error={invalidPass}\n              onChange={(e) => {setPass(e.target.value)}}\n              helperText={passErrMsg}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid\n              container\n              justifyContent=\"center\"\n              sx={{ alignItems: \"center\", textAlign: \"center\" }}\n            >\n              <Grid item xs={6} sm={6} md={6}>\n                <Link href=\"/purduepal-fe\" variant=\"body2\">\n                  {\"Have An Account? Sign In!\"}\n                </Link>\n              </Grid>\n              <Grid item style={{ width: \"100%\" }} sx={{ mt: 3, mb: 2 }}>\n                <Logo fill={theme.palette.primary.main} />\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n","/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Notifications/Notifications.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Settings/Settings.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Saved/Saved.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Content/Content.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/pages/Profile/ProfileDetails.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/ENV.js",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/Interactions.jsx",[],[],"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/FolllowingList.jsx",[],[],{"ruleId":"136","severity":2,"message":"137","line":22,"column":18,"nodeType":"138","messageId":"139","endLine":22,"endColumn":22,"suppressions":"140"},{"ruleId":"136","severity":2,"message":"137","line":53,"column":31,"nodeType":"138","messageId":"139","endLine":53,"endColumn":35,"suppressions":"141"},{"ruleId":"136","severity":2,"message":"137","line":66,"column":1,"nodeType":"138","messageId":"139","endLine":66,"endColumn":5,"suppressions":"142"},{"ruleId":"136","severity":2,"message":"137","line":68,"column":5,"nodeType":"138","messageId":"139","endLine":68,"endColumn":9,"suppressions":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":34,"column":22,"nodeType":"138","messageId":"152","endLine":34,"endColumn":35},{"ruleId":"144","replacedBy":"153"},{"ruleId":"146","replacedBy":"154"},{"ruleId":"150","severity":1,"message":"155","line":161,"column":7,"nodeType":"138","messageId":"152","endLine":161,"endColumn":10},{"ruleId":"150","severity":1,"message":"156","line":139,"column":11,"nodeType":"138","messageId":"152","endLine":139,"endColumn":27},"no-restricted-globals","Unexpected use of 'self'.","Identifier","defaultMessage",["157"],["158"],["159"],["160"],"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"no-unused-vars","'setIsSignedIn' is assigned a value but never used.","unusedVar",["161"],["162"],"'url' is assigned a value but never used.","'standardizedPass' is assigned a value but never used.",{"kind":"163","justification":"164"},{"kind":"163","justification":"164"},{"kind":"163","justification":"164"},{"kind":"163","justification":"164"},"no-global-assign","no-unsafe-negation","directive",""]