{"ast":null,"code":"var _jsxFileName = \"/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/CreatePost.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Button, Fab, IconButton, Stack, TextField, Autocomplete, createFilterOptions } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption() {\n  _s();\n\n  const [value, setValue] = useState(null);\n  const [errorTopic, setErrorTopic] = useState(false);\n  const [errorTopicMessage, setErrorTopicMessage] = useState(\"\");\n  useEffect(() => {\n    if (value !== null) {\n      if (value.length <= 0 || value.length > 50) {\n        setErrorTopic(true);\n        setErrorTopicMessage(\"Topic must be between 1-50 characters\");\n      } else {\n        setErrorTopic(false);\n        setErrorTopicMessage(\"\");\n      }\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      console.log(newValue);\n\n      if (typeof newValue === \"string\") {\n        console.log(newValue, newValue.length);\n\n        if (newValue.length === 0 || newValue.length > 50) {\n          setErrorTopic(true);\n          setErrorTopicMessage(\"Topic must be 1-50 characters\");\n        } else {\n          setErrorTopic(false);\n          setErrorTopicMessage(\"\");\n          setValue({\n            title: newValue\n          });\n        }\n      } else if (newValue && newValue.inputValue) {\n        // Create a new value from the user input\n        console.log(newValue, newValue.length);\n\n        if (newValue.inputValue.length === 0 || newValue.inputValue.length > 50) {\n          setErrorTopic(true);\n          setErrorTopicMessage(\"Topic must be 1-50 characters\");\n        } else {\n          setErrorTopic(false);\n          setErrorTopicMessage(\"\");\n          setValue({\n            title: newValue.inputValue\n          });\n        }\n      } else {\n        setValue(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params; // Suggest the creation of a new value\n\n      const isExisting = options.some(option => inputValue === option.title);\n\n      if (inputValue !== \"\" && !isExisting) {\n        filtered.push({\n          inputValue,\n          title: `Add \"${inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: topicOptions,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === \"string\") {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.title;\n    },\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n      children: option.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 40\n    }, this),\n    sx: {\n      width: \"50%\"\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      error: errorTopic,\n      helperText: errorTopicMessage,\n      label: \"Choose Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FreeSoloCreateOption, \"jm7XNuhhR1ie9Nepc0p1xciDSWM=\");\n\n_c = FreeSoloCreateOption;\nconst topicOptions = [{\n  title: \"Marvel\"\n}, {\n  title: \"DC\"\n}, {\n  title: \"Purdue\"\n}, {\n  title: \"Math\"\n}];\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"#333\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst ariaLabel = {\n  \"aria-label\": \"description\"\n};\nexport const CreatePost = () => {\n  _s2();\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fabPosWidth = matches ? \"80px\" : \"16px\";\n  const fabPosHeight = matches ? \"22px\" : \"40px\";\n  const [postText, setPostText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    setErrorText(false);\n    setErrorTextMessage(\"\");\n  };\n\n  const [post, setPost] = useState(false);\n\n  const handleSubmit = () => {\n    //dummy code to handle creating post\n    setPost(true);\n    setInterval(setPost(true), 1000);\n    setPost(false);\n    console.log(post);\n  };\n\n  const isURL = str => {\n    let url;\n\n    try {\n      url = new URL(str);\n    } catch (_) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const [paste, setPaste] = useState(false);\n  const [errorText, setErrorText] = useState(false);\n  const [errorTextMessage, setErrorTextMessage] = useState(\"\");\n\n  const handleTextLength = text => {\n    // console.log(isURL(text),text);\n    const urlValid = isURL(text);\n\n    if (text.length > 280 || text.length <= 0) {\n      console.log(urlValid, text);\n\n      if (!urlValid && (text.includes(\"http://\") || text.includes(\"https://\"))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\");\n      } else if (!urlValid) {\n        setErrorText(true);\n        setErrorTextMessage(\"Post Must Contain Between 1-280 characters\");\n      } else {\n        setErrorText(false);\n        setErrorTextMessage(\"\");\n      }\n    } else {\n      if (!urlValid && (text.includes(\"http://\") || text.includes(\"https://\"))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\");\n      } else {\n        setErrorText(false);\n        setErrorTextMessage(\"\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      sx: {\n        position: \"fixed\",\n        bottom: fabPosWidth,\n        right: fabPosHeight\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#eee\",\n            id: \"modal-modal-title\",\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Create a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FreeSoloCreateOption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            rows: 4,\n            error: errorText,\n            fullWidth: true,\n            placeholder: \"Type something\",\n            inputProps: ariaLabel,\n            helperText: errorTextMessage,\n            onChange: e => {\n              if (!paste) {\n                // console.log(\"changed!! \"+e.target.value)\n                setPostText(e.target.value);\n                console.log(\"changed!! \" + postText);\n                handleTextLength(e.target.value);\n              }\n\n              setPaste(false);\n            },\n            onPaste: e => {\n              // console.log(\"pasted!! \")\n              setPaste(true);\n              e.clipboardData.items[0].getAsString(text => {\n                setPostText(text);\n                handleTextLength(text);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: errorText ? true : false,\n            variant: \"contained\",\n            onClick: handleSubmit,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CreatePost, \"YJqswoGIFWT7UDCM7N1szihVdeo=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c2 = CreatePost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FreeSoloCreateOption\");\n$RefreshReg$(_c2, \"CreatePost\");","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/purduepal-fe/src/components/CreatePost.jsx"],"names":["useState","useEffect","Box","Typography","Modal","Button","Fab","IconButton","Stack","TextField","Autocomplete","createFilterOptions","AddIcon","AddAPhotoIcon","useTheme","useMediaQuery","filter","FreeSoloCreateOption","value","setValue","errorTopic","setErrorTopic","errorTopicMessage","setErrorTopicMessage","length","event","newValue","console","log","title","inputValue","options","params","filtered","isExisting","some","option","push","topicOptions","props","width","style","position","top","left","transform","bgcolor","border","boxShadow","p","ariaLabel","CreatePost","theme","matches","breakpoints","down","fabPosWidth","fabPosHeight","postText","setPostText","open","setOpen","handleOpen","handleClose","setErrorText","setErrorTextMessage","post","setPost","handleSubmit","setInterval","isURL","str","url","URL","_","paste","setPaste","errorText","errorTextMessage","handleTextLength","text","urlValid","includes","bottom","right","e","target","clipboardData","items","getAsString"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport {\n  Button,\n  Fab,\n  IconButton,\n  Stack,\n  TextField,\n  Autocomplete,\n  createFilterOptions,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = useState(null);\n  const [errorTopic,setErrorTopic] = useState(false)\n  const [errorTopicMessage,setErrorTopicMessage] = useState(\"\")\n\n  useEffect(() => {\n    if (value !== null) {\n      if (value.length <= 0 || value.length > 50) {\n        setErrorTopic(true)\n        setErrorTopicMessage(\"Topic must be between 1-50 characters\")\n      } else {\n        setErrorTopic(false)\n        setErrorTopicMessage(\"\")\n      }\n    }\n  }, [value]);\n\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        console.log(newValue)\n        if (typeof newValue === \"string\") {\n          console.log(newValue,newValue.length)\n          if (newValue.length === 0 || newValue.length > 50) {\n            setErrorTopic(true)\n            setErrorTopicMessage(\"Topic must be 1-50 characters\")\n          } else {\n            setErrorTopic(false)\n            setErrorTopicMessage(\"\")\n            setValue({\n              title: newValue,\n            });\n          }\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          console.log(newValue,newValue.length)\n          if (newValue.inputValue.length === 0 || newValue.inputValue.length > 50) {\n            setErrorTopic(true)\n            setErrorTopicMessage(\"Topic must be 1-50 characters\")\n          } else {\n            setErrorTopic(false)\n            setErrorTopicMessage(\"\")\n            setValue({\n              title: newValue.inputValue,\n            });\n          }\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some(\n          (option) => inputValue === option.title\n        );\n        if (inputValue !== \"\" && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={topicOptions}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      sx={{ width: \"50%\" }}\n      freeSolo\n      renderInput={(params) => <TextField {...params} error={errorTopic} helperText={errorTopicMessage} label=\"Choose Topic\" />}\n    />\n  );\n}\n\nconst topicOptions = [\n  { title: \"Marvel\" },\n  { title: \"DC\" },\n  { title: \"Purdue\" },\n  { title: \"Math\" },\n];\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"#333\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ariaLabel = { \"aria-label\": \"description\" };\n\nexport const CreatePost = () => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fabPosWidth = matches ? \"80px\" : \"16px\";\n  const fabPosHeight = matches ? \"22px\" : \"40px\";\n  const [postText, setPostText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setErrorText(false);\n    setErrorTextMessage(\"\");\n  }\n  const [post, setPost] = useState(false);\n  const handleSubmit = () => {\n    //dummy code to handle creating post\n    setPost(true);\n    setInterval(setPost(true), 1000);\n    setPost(false);\n    console.log(post);\n  };\n\n  const isURL = (str) => {\n    let url;\n  \n    try {\n      url = new URL(str);\n    } catch (_) {\n      return false;  \n    }\n\n    return true;\n  }\n\n  const [paste,setPaste] = useState(false);\n  const [errorText, setErrorText] = useState(false);\n  const [errorTextMessage, setErrorTextMessage] = useState(\"\");\n  const handleTextLength = (text) => {\n    // console.log(isURL(text),text);\n    const urlValid = isURL(text);\n    if (text.length > 280 || text.length <= 0) {\n      console.log(urlValid,text)\n      if (!urlValid && (text.includes(\"http://\") || (text.includes(\"https://\")))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\") \n      } else if (!urlValid) {\n        setErrorText(true);\n        setErrorTextMessage(\"Post Must Contain Between 1-280 characters\")\n      } else {\n        setErrorText(false)\n        setErrorTextMessage(\"\")          \n      }\n    } else {\n      if (!urlValid && (text.includes(\"http://\") || (text.includes(\"https://\")))) {\n        setErrorText(true);\n        setErrorTextMessage(\"URL is invalid\") \n      } else {\n        setErrorText(false)\n        setErrorTextMessage(\"\")\n      }\n    }\n  }\n  return (\n    <div>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        sx={{\n          position: \"fixed\",\n          bottom: fabPosWidth,\n          right: fabPosHeight,\n        }}\n        onClick={handleOpen}\n      >\n        <AddIcon />\n      </Fab>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={2}>\n            <Typography\n              color={\"#eee\"}\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              Create a Post\n            </Typography>\n            <FreeSoloCreateOption />\n            <TextField\n              multiline\n              rows={4}\n              error={errorText}\n              fullWidth\n              placeholder=\"Type something\"\n              inputProps={ariaLabel}\n              helperText={errorTextMessage}\n              onChange={(e) => {\n                if (!paste) {\n                  // console.log(\"changed!! \"+e.target.value)\n                  setPostText(e.target.value);\n                  console.log(\"changed!! \"+postText)\n                  handleTextLength(e.target.value);\n                }\n                setPaste(false);\n              }}\n              onPaste={(e) => {\n                // console.log(\"pasted!! \")\n                setPaste(true);\n                e.clipboardData.items[0].getAsString(text=>{\n                  setPostText(text);\n                  handleTextLength(text);\n                })\n              }}\n            />\n            <Stack direction={\"row\"}>\n              <IconButton color=\"primary\">\n                <AddAPhotoIcon />\n              </IconButton>\n            </Stack>\n            <Button\n              disabled={errorText ? true : false}\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Post\n            </Button>\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}