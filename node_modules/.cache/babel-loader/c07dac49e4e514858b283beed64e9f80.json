{"ast":null,"code":"var _jsxFileName = \"/Users/chintansawla/Documents/GitHub/PurduePAL-Frontend/pal-fe/src/components/CreatePost.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Button, Fab, IconButton, Stack, TextField } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\nimport * as React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption() {\n  _s();\n\n  const [value, setValue] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      if (typeof newValue === \"string\") {\n        setValue({\n          title: newValue\n        });\n      } else if (newValue && newValue.inputValue) {\n        // Create a new value from the user input\n        setValue({\n          title: newValue.inputValue\n        });\n      } else {\n        setValue(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params; // Suggest the creation of a new value\n\n      const isExisting = options.some(option => inputValue === option.title);\n\n      if (inputValue !== \"\" && !isExisting) {\n        filtered.push({\n          inputValue,\n          title: `Add \"${inputValue}\"`\n        });\n      }\n\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: top100Films,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === \"string\") {\n        return option;\n      } // Add \"xxx\" option created dynamically\n\n\n      if (option.inputValue) {\n        return option.inputValue;\n      } // Regular option\n\n\n      return option.title;\n    },\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n      children: option.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }, this),\n    sx: {\n      width: 300\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Free solo with text demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(FreeSoloCreateOption, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c = FreeSoloCreateOption;\nconst top100Films = [{\n  title: \"The Shawshank Redemption\",\n  year: 1994\n}, {\n  title: \"The Godfather\",\n  year: 1972\n}, {\n  title: \"The Godfather: Part II\",\n  year: 1974\n}, {\n  title: \"The Dark Knight\",\n  year: 2008\n}, {\n  title: \"12 Angry Men\",\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: \"Pulp Fiction\",\n  year: 1994\n}, {\n  title: \"The Lord of the Rings: The Return of the King\",\n  year: 2003\n}, {\n  title: \"The Good, the Bad and the Ugly\",\n  year: 1966\n}, {\n  title: \"Fight Club\",\n  year: 1999\n}, {\n  title: \"The Lord of the Rings: The Fellowship of the Ring\",\n  year: 2001\n}, {\n  title: \"Star Wars: Episode V - The Empire Strikes Back\",\n  year: 1980\n}, {\n  title: \"Forrest Gump\",\n  year: 1994\n}, {\n  title: \"Inception\",\n  year: 2010\n}, {\n  title: \"The Lord of the Rings: The Two Towers\",\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: \"Goodfellas\",\n  year: 1990\n}, {\n  title: \"The Matrix\",\n  year: 1999\n}, {\n  title: \"Seven Samurai\",\n  year: 1954\n}, {\n  title: \"Star Wars: Episode IV - A New Hope\",\n  year: 1977\n}, {\n  title: \"City of God\",\n  year: 2002\n}, {\n  title: \"Se7en\",\n  year: 1995\n}, {\n  title: \"The Silence of the Lambs\",\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: \"Life Is Beautiful\",\n  year: 1997\n}, {\n  title: \"The Usual Suspects\",\n  year: 1995\n}, {\n  title: \"Léon: The Professional\",\n  year: 1994\n}, {\n  title: \"Spirited Away\",\n  year: 2001\n}, {\n  title: \"Saving Private Ryan\",\n  year: 1998\n}, {\n  title: \"Once Upon a Time in the West\",\n  year: 1968\n}, {\n  title: \"American History X\",\n  year: 1998\n}, {\n  title: \"Interstellar\",\n  year: 2014\n}, {\n  title: \"Casablanca\",\n  year: 1942\n}, {\n  title: \"City Lights\",\n  year: 1931\n}, {\n  title: \"Psycho\",\n  year: 1960\n}, {\n  title: \"The Green Mile\",\n  year: 1999\n}, {\n  title: \"The Intouchables\",\n  year: 2011\n}, {\n  title: \"Modern Times\",\n  year: 1936\n}, {\n  title: \"Raiders of the Lost Ark\",\n  year: 1981\n}, {\n  title: \"Rear Window\",\n  year: 1954\n}, {\n  title: \"The Pianist\",\n  year: 2002\n}, {\n  title: \"The Departed\",\n  year: 2006\n}, {\n  title: \"Terminator 2: Judgment Day\",\n  year: 1991\n}, {\n  title: \"Back to the Future\",\n  year: 1985\n}, {\n  title: \"Whiplash\",\n  year: 2014\n}, {\n  title: \"Gladiator\",\n  year: 2000\n}, {\n  title: \"Memento\",\n  year: 2000\n}, {\n  title: \"The Prestige\",\n  year: 2006\n}, {\n  title: \"The Lion King\",\n  year: 1994\n}, {\n  title: \"Apocalypse Now\",\n  year: 1979\n}, {\n  title: \"Alien\",\n  year: 1979\n}, {\n  title: \"Sunset Boulevard\",\n  year: 1950\n}, {\n  title: \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n  year: 1964\n}, {\n  title: \"The Great Dictator\",\n  year: 1940\n}, {\n  title: \"Cinema Paradiso\",\n  year: 1988\n}, {\n  title: \"The Lives of Others\",\n  year: 2006\n}, {\n  title: \"Grave of the Fireflies\",\n  year: 1988\n}, {\n  title: \"Paths of Glory\",\n  year: 1957\n}, {\n  title: \"Django Unchained\",\n  year: 2012\n}, {\n  title: \"The Shining\",\n  year: 1980\n}, {\n  title: \"WALL·E\",\n  year: 2008\n}, {\n  title: \"American Beauty\",\n  year: 1999\n}, {\n  title: \"The Dark Knight Rises\",\n  year: 2012\n}, {\n  title: \"Princess Mononoke\",\n  year: 1997\n}, {\n  title: \"Aliens\",\n  year: 1986\n}, {\n  title: \"Oldboy\",\n  year: 2003\n}, {\n  title: \"Once Upon a Time in America\",\n  year: 1984\n}, {\n  title: \"Witness for the Prosecution\",\n  year: 1957\n}, {\n  title: \"Das Boot\",\n  year: 1981\n}, {\n  title: \"Citizen Kane\",\n  year: 1941\n}, {\n  title: \"North by Northwest\",\n  year: 1959\n}, {\n  title: \"Vertigo\",\n  year: 1958\n}, {\n  title: \"Star Wars: Episode VI - Return of the Jedi\",\n  year: 1983\n}, {\n  title: \"Reservoir Dogs\",\n  year: 1992\n}, {\n  title: \"Braveheart\",\n  year: 1995\n}, {\n  title: \"M\",\n  year: 1931\n}, {\n  title: \"Requiem for a Dream\",\n  year: 2000\n}, {\n  title: \"Amélie\",\n  year: 2001\n}, {\n  title: \"A Clockwork Orange\",\n  year: 1971\n}, {\n  title: \"Like Stars on Earth\",\n  year: 2007\n}, {\n  title: \"Taxi Driver\",\n  year: 1976\n}, {\n  title: \"Lawrence of Arabia\",\n  year: 1962\n}, {\n  title: \"Double Indemnity\",\n  year: 1944\n}, {\n  title: \"Eternal Sunshine of the Spotless Mind\",\n  year: 2004\n}, {\n  title: \"Amadeus\",\n  year: 1984\n}, {\n  title: \"To Kill a Mockingbird\",\n  year: 1962\n}, {\n  title: \"Toy Story 3\",\n  year: 2010\n}, {\n  title: \"Logan\",\n  year: 2017\n}, {\n  title: \"Full Metal Jacket\",\n  year: 1987\n}, {\n  title: \"Dangal\",\n  year: 2016\n}, {\n  title: \"The Sting\",\n  year: 1973\n}, {\n  title: \"2001: A Space Odyssey\",\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: \"Toy Story\",\n  year: 1995\n}, {\n  title: \"Bicycle Thieves\",\n  year: 1948\n}, {\n  title: \"The Kid\",\n  year: 1921\n}, {\n  title: \"Inglourious Basterds\",\n  year: 2009\n}, {\n  title: \"Snatch\",\n  year: 2000\n}, {\n  title: \"3 Idiots\",\n  year: 2009\n}, {\n  title: \"Monty Python and the Holy Grail\",\n  year: 1975\n}];\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"#333\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst ariaLabel = {\n  \"aria-label\": \"description\"\n};\nexport const CreatePost = () => {\n  _s2();\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fabPosWidth = matches ? \"80px\" : \"16px\";\n  const fabPosHeight = matches ? \"22px\" : \"40px\";\n  const [postText, setPostText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [post, setPost] = useState(false);\n\n  const handleSubmit = () => {\n    //dummy code to handle creating post\n    setPost(true);\n    setInterval(setPost(true), 1000);\n    setPost(false);\n    console.log(post);\n  };\n\n  const [errorText, setErrorText] = useState(false);\n\n  const handleTextLength = text => text.length > 280 || text.length <= 0 ? setErrorText(true) : setErrorText(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      sx: {\n        position: \"fixed\",\n        bottom: fabPosWidth,\n        right: fabPosHeight\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#eee\",\n            id: \"modal-modal-title\",\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Create a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FreeSoloCreateOption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            rows: 4,\n            error: errorText,\n            fullWidth: true,\n            placeholder: \"Type something\",\n            inputProps: ariaLabel,\n            onChange: e => {\n              setPostText(e.target.value);\n              handleTextLength(postText);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: errorText ? true : false,\n            variant: \"contained\",\n            onClick: handleSubmit,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CreatePost, \"uvKkk14JRBVCUp4iqEvaSyW/KAs=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c2 = CreatePost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FreeSoloCreateOption\");\n$RefreshReg$(_c2, \"CreatePost\");","map":{"version":3,"sources":["/Users/chintansawla/Documents/GitHub/PurduePAL-Frontend/pal-fe/src/components/CreatePost.jsx"],"names":["useState","Box","Typography","Modal","Button","Fab","IconButton","Stack","TextField","AddIcon","AddAPhotoIcon","useTheme","useMediaQuery","React","Autocomplete","createFilterOptions","filter","FreeSoloCreateOption","value","setValue","event","newValue","title","inputValue","options","params","filtered","isExisting","some","option","push","top100Films","props","width","year","style","position","top","left","transform","bgcolor","border","boxShadow","p","ariaLabel","CreatePost","theme","matches","breakpoints","down","fabPosWidth","fabPosHeight","postText","setPostText","open","setOpen","handleOpen","handleClose","post","setPost","handleSubmit","setInterval","console","log","errorText","setErrorText","handleTextLength","text","length","bottom","right","e","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { Button, Fab, IconButton, Stack, TextField } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { useTheme, useMediaQuery } from \"@mui/material\";\n\nimport * as React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === \"string\") {\n          setValue({\n            title: newValue,\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            title: newValue.inputValue,\n          });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some(\n          (option) => inputValue === option.title\n        );\n        if (inputValue !== \"\" && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={top100Films}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Free solo with text demo\" />\n      )}\n    />\n  );\n}\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: \"Pulp Fiction\", year: 1994 },\n  {\n    title: \"The Lord of the Rings: The Return of the King\",\n    year: 2003,\n  },\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\n  { title: \"Fight Club\", year: 1999 },\n  {\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\n    year: 2001,\n  },\n  {\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\n    year: 1980,\n  },\n  { title: \"Forrest Gump\", year: 1994 },\n  { title: \"Inception\", year: 2010 },\n  {\n    title: \"The Lord of the Rings: The Two Towers\",\n    year: 2002,\n  },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: \"Goodfellas\", year: 1990 },\n  { title: \"The Matrix\", year: 1999 },\n  { title: \"Seven Samurai\", year: 1954 },\n  {\n    title: \"Star Wars: Episode IV - A New Hope\",\n    year: 1977,\n  },\n  { title: \"City of God\", year: 2002 },\n  { title: \"Se7en\", year: 1995 },\n  { title: \"The Silence of the Lambs\", year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: \"Life Is Beautiful\", year: 1997 },\n  { title: \"The Usual Suspects\", year: 1995 },\n  { title: \"Léon: The Professional\", year: 1994 },\n  { title: \"Spirited Away\", year: 2001 },\n  { title: \"Saving Private Ryan\", year: 1998 },\n  { title: \"Once Upon a Time in the West\", year: 1968 },\n  { title: \"American History X\", year: 1998 },\n  { title: \"Interstellar\", year: 2014 },\n  { title: \"Casablanca\", year: 1942 },\n  { title: \"City Lights\", year: 1931 },\n  { title: \"Psycho\", year: 1960 },\n  { title: \"The Green Mile\", year: 1999 },\n  { title: \"The Intouchables\", year: 2011 },\n  { title: \"Modern Times\", year: 1936 },\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\n  { title: \"Rear Window\", year: 1954 },\n  { title: \"The Pianist\", year: 2002 },\n  { title: \"The Departed\", year: 2006 },\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\n  { title: \"Back to the Future\", year: 1985 },\n  { title: \"Whiplash\", year: 2014 },\n  { title: \"Gladiator\", year: 2000 },\n  { title: \"Memento\", year: 2000 },\n  { title: \"The Prestige\", year: 2006 },\n  { title: \"The Lion King\", year: 1994 },\n  { title: \"Apocalypse Now\", year: 1979 },\n  { title: \"Alien\", year: 1979 },\n  { title: \"Sunset Boulevard\", year: 1950 },\n  {\n    title:\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\n    year: 1964,\n  },\n  { title: \"The Great Dictator\", year: 1940 },\n  { title: \"Cinema Paradiso\", year: 1988 },\n  { title: \"The Lives of Others\", year: 2006 },\n  { title: \"Grave of the Fireflies\", year: 1988 },\n  { title: \"Paths of Glory\", year: 1957 },\n  { title: \"Django Unchained\", year: 2012 },\n  { title: \"The Shining\", year: 1980 },\n  { title: \"WALL·E\", year: 2008 },\n  { title: \"American Beauty\", year: 1999 },\n  { title: \"The Dark Knight Rises\", year: 2012 },\n  { title: \"Princess Mononoke\", year: 1997 },\n  { title: \"Aliens\", year: 1986 },\n  { title: \"Oldboy\", year: 2003 },\n  { title: \"Once Upon a Time in America\", year: 1984 },\n  { title: \"Witness for the Prosecution\", year: 1957 },\n  { title: \"Das Boot\", year: 1981 },\n  { title: \"Citizen Kane\", year: 1941 },\n  { title: \"North by Northwest\", year: 1959 },\n  { title: \"Vertigo\", year: 1958 },\n  {\n    title: \"Star Wars: Episode VI - Return of the Jedi\",\n    year: 1983,\n  },\n  { title: \"Reservoir Dogs\", year: 1992 },\n  { title: \"Braveheart\", year: 1995 },\n  { title: \"M\", year: 1931 },\n  { title: \"Requiem for a Dream\", year: 2000 },\n  { title: \"Amélie\", year: 2001 },\n  { title: \"A Clockwork Orange\", year: 1971 },\n  { title: \"Like Stars on Earth\", year: 2007 },\n  { title: \"Taxi Driver\", year: 1976 },\n  { title: \"Lawrence of Arabia\", year: 1962 },\n  { title: \"Double Indemnity\", year: 1944 },\n  {\n    title: \"Eternal Sunshine of the Spotless Mind\",\n    year: 2004,\n  },\n  { title: \"Amadeus\", year: 1984 },\n  { title: \"To Kill a Mockingbird\", year: 1962 },\n  { title: \"Toy Story 3\", year: 2010 },\n  { title: \"Logan\", year: 2017 },\n  { title: \"Full Metal Jacket\", year: 1987 },\n  { title: \"Dangal\", year: 2016 },\n  { title: \"The Sting\", year: 1973 },\n  { title: \"2001: A Space Odyssey\", year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: \"Toy Story\", year: 1995 },\n  { title: \"Bicycle Thieves\", year: 1948 },\n  { title: \"The Kid\", year: 1921 },\n  { title: \"Inglourious Basterds\", year: 2009 },\n  { title: \"Snatch\", year: 2000 },\n  { title: \"3 Idiots\", year: 2009 },\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\n];\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"#333\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ariaLabel = { \"aria-label\": \"description\" };\n\nexport const CreatePost = () => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fabPosWidth = matches ? \"80px\" : \"16px\";\n  const fabPosHeight = matches ? \"22px\" : \"40px\";\n  const [postText, setPostText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [post, setPost] = useState(false);\n  const handleSubmit = () => {\n    //dummy code to handle creating post\n    setPost(true);\n    setInterval(setPost(true), 1000);\n    setPost(false);\n    console.log(post);\n  };\n  const [errorText, setErrorText] = useState(false);\n  const handleTextLength = (text) =>\n    text.length > 280 || text.length <= 0\n      ? setErrorText(true)\n      : setErrorText(false);\n\n  return (\n    <div>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        sx={{\n          position: \"fixed\",\n          bottom: fabPosWidth,\n          right: fabPosHeight,\n        }}\n        onClick={handleOpen}\n      >\n        <AddIcon />\n      </Fab>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Stack spacing={2}>\n            <Typography\n              color={\"#eee\"}\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              Create a Post\n            </Typography>\n            <FreeSoloCreateOption />\n            <TextField\n              multiline\n              rows={4}\n              error={errorText}\n              fullWidth\n              placeholder=\"Type something\"\n              inputProps={ariaLabel}\n              onChange={(e) => {\n                setPostText(e.target.value);\n                handleTextLength(postText);\n              }}\n            />\n            <Stack direction={\"row\"}>\n              <IconButton color=\"primary\">\n                <AddAPhotoIcon />\n              </IconButton>\n            </Stack>\n            <Button\n              disabled={errorText ? true : false}\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Post\n            </Button>\n          </Stack>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}